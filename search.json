[{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to wildRtrax","title":"Contributing to wildRtrax","text":"outlines propose change wildRtrax. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to wildRtrax","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to wildRtrax","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to wildRtrax","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ABbiodiversity/wildRtrax\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to wildRtrax","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to wildRtrax","text":"Please note wildRtrax project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 wildRtrax authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with wildRtrax","title":"Getting help with wildRtrax","text":"Thanks using wildRtrax! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with wildRtrax","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with wildRtrax","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with wildRtrax","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-data-wrangling.html","id":"data-wrangling","dir":"Articles","previous_headings":"","what":"Data wrangling","title":"Acoustic data wrangling","text":"Now let’s start cleaning things bit. don’t need certain abiotic codes let’s remove wt_tidy_species(), convert TMTT counts numeric, finally widen data species matrix.","code":"my_tidy_data <- wt_tidy_species(my_data, remove = c(\"mammal\", \"amphibian\", \"abiotic\", \"insect\", \"unknown\", zerofill=TRUE))  # Difference in rows round((nrow(my_tidy_data)/nrow(my_data)),2) my_tmtt_data <- wt_replace_tmtt(data = my_tidy_data, calc = \"round\") my_wide_data <- wt_make_wide(data = my_tmtt_data, sound = \"all\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-data-wrangling.html","id":"offsets","dir":"Articles","previous_headings":"","what":"Offsets","title":"Acoustic data wrangling","text":"Now can add additional offsets.","code":"my_offset_data <- wt_qpad_offsets(data = my_wide_data, species = \"all\", version = 3, together = TRUE)"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-data-wrangling.html","id":"occupancy-modelling","dir":"Articles","previous_headings":"","what":"Occupancy modelling","title":"Acoustic data wrangling","text":"can also perform single-season, single-species occupancy work flow using wt_format_occupancy() data downloaded.","code":"dat.occu <- wt_format_occupancy(my_data, species=\"CONI\", siteCovs=NULL) mod <- unmarked::occu(~ 1 ~ 1, dat.occu) mod"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-pre-processing.html","id":"scanning-audio-files-from-a-directory","dir":"Articles","previous_headings":"","what":"Scanning audio files from a directory","title":"Acoustic pre-processing","text":"wt_audio_scanner() function reads audio files (either wac, wav flac format) local directory outputs useful metadata. might want select recordings certain times day year, filter recordings based criteria.","code":"# Scan data  if (dir.exists(\".\")) {   wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T) } else {   'Can\\'\\t find this directory' } files %>%   select(-file_path) #> # A tibble: 1,041 × 10 #>    size_Mb unsafe file_name  location recording_date_time file_type julian  year #>      <dbl> <chr>  <chr>      <chr>    <dttm>              <chr>      <dbl> <dbl> #>  1    3.51 Safe   228-NE_20… 228-NE   2021-11-21 12:35:49 wav          325  2021 #>  2  106.   Safe   228-NE_20… 228-NE   2022-03-01 00:00:00 wav           60  2022 #>  3   31.8  Safe   228-NE_20… 228-NE   2022-03-01 02:00:00 wav           60  2022 #>  4  106.   Safe   228-NE_20… 228-NE   2022-03-01 08:59:00 wav           60  2022 #>  5   31.8  Safe   228-NE_20… 228-NE   2022-03-01 10:29:00 wav           60  2022 #>  6   31.8  Safe   228-NE_20… 228-NE   2022-03-01 12:00:00 wav           60  2022 #>  7   31.8  Safe   228-NE_20… 228-NE   2022-03-01 15:00:00 wav           60  2022 #>  8   31.8  Safe   228-NE_20… 228-NE   2022-03-01 18:17:00 wav           60  2022 #>  9   31.8  Safe   228-NE_20… 228-NE   2022-03-01 20:17:00 wav           60  2022 #> 10  106.   Safe   228-NE_20… 228-NE   2022-03-02 00:00:00 wav           61  2022 #> # ℹ 1,031 more rows #> # ℹ 2 more variables: gps_enabled <lgl>, time_index <int> library(lubridate)  files %>%   mutate(hour = hour(recording_date_time)) %>%   filter(julian == 176,           hour %in% c(4:8)) #> # A tibble: 2 × 12 #>   file_path      size_Mb unsafe file_name location recording_date_time file_type #>   <chr>            <dbl> <chr>  <chr>     <chr>    <dttm>              <chr>     #> 1 /volumes/buda…   106.  Safe   228-NE_2… 228-NE   2022-06-25 05:35:00 wav       #> 2 /volumes/buda…    31.8 Safe   228-NE_2… 228-NE   2022-06-25 07:05:00 wav       #> # ℹ 5 more variables: julian <dbl>, year <dbl>, gps_enabled <lgl>, #> #   time_index <int>, hour <int>"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-pre-processing.html","id":"running-the-qut-ecoacoustics-analysisprograms-software-on-a-wt_-standard-data-set","dir":"Articles","previous_headings":"","what":"Running the QUT Ecoacoustics AnalysisPrograms software on a wt_* standard data set","title":"Acoustic pre-processing","text":"wt_run_ap() function allows run QUT Analysis Programs (AP.exe) audio data. AP generates acoustic index values false-colour spectrograms audio minute data. Note must AP program installed computer. See (Towsey et al., 2018). use wt_glean_ap() plot acoustic index long-duration false-colour spectrogram (LDFC) results.","code":"# Use the wt_* tibble to execute the AP on the files  wt_run_ap(x = my_files, output_dir = paste0(root, 'ap_outputs'), path_to_ap = '/where/you/store/AP') >  > wt_glean_ap() >"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-pre-processing.html","id":"applying-a-limited-amplitude-filter","dir":"Articles","previous_headings":"","what":"Applying a limited amplitude filter","title":"Acoustic pre-processing","text":"can use wt_signal_level() function search sounds exceed certain amplitude threshold.","code":"if (dir.exists(\".\")) {   signal_file <- wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T) } else {   'Can\\'\\t find this directory' }  wt_signal_level(path = signal_file$file_path,                       fmin = 0,                       fmax = 10000,                       threshold = 5,                       channel = 'left') # Run s # Return a list object, with parameters stored str(s)  # We can view the output: s['output'] # We have eleven detections that exceeded this threshold."},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/acoustic-pre-processing.html","id":"linking-data-to-wildtrax","dir":"Articles","previous_headings":"","what":"Linking data to WildTrax","title":"Acoustic pre-processing","text":"Make tasks time using wt_* standard data set wt_make_aru_tasks(). function wt_songscope_tags() reformats output obtained Wildlife Acoustics Songscope recognizer. transformation involves converting recognizer tags tags method type. makes possible upload hit tag task. Similarly, function wt_kaleidoscope_tags() performs reformatting process, Kaleidoscope instead. worth noting function targeted sonic ultrasonic species upload.","code":"wt_make_aru_tasks(input = files %>% select(-file_path), task_method = \"1SPT\", task_length = 180) > wt_songscope_tags() wt_kaleidoscope_tags(input = \"SML182.txt\", )"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/apis.html","id":"set-up-wildtrax-credentials","dir":"Articles","previous_headings":"","what":"Set up WildTrax credentials","title":"APIs","text":"obtain Auth0 token, must login WildTrax using Auth0 (Google authorization currently supported). also need store WildTrax user name password environment variables.","code":"# Note that you need to use 'WT_USERNAME' and 'WT_PASSWORD' Sys.setenv(WT_USERNAME = 'guest', WT_PASSWORD = 'Apple123')"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/apis.html","id":"authenticate","dir":"Articles","previous_headings":"","what":"Authenticate","title":"APIs","text":"Next, use wt_auth() function authenticate. Auth0 token obtained last 12 hours. time, need re-authenticate.","code":"# Authenticate wt_auth() #> Authentication into WildTrax successful."},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/apis.html","id":"making-api-calls","dir":"Articles","previous_headings":"","what":"Making API calls","title":"APIs","text":"authenticated, can now use various functions call upon WildTrax API. instance, can use wt_get_download_summary() see basic metadata projects can download data . Using project_id number download summary can use wt_download_report() access species data. can also find project_id number url WildTrax project, e.g. https://www.wildtrax.ca/home/aru-tasks.html?projectId=605&sensorId=ARU. easy way download multiple projects use wt_get_download_summary() filter substring order get project ids download data. Downloading WildTrax species table wt_get_species() also grants access valuable columns provides complete list species currently supported WildTrax.","code":"# Download the project summary you have access to my_projects <- wt_get_download_summary(sensor_id = 'ARU') %>%   tibble::as_tibble() %>%   tidyr::unnest(cols = c(project, project_id, sensorId, tasks, status))  head(my_projects) #> # A tibble: 6 × 5 #>   project                                       project_id sensorId tasks status #>   <chr>                                              <int> <chr>    <int> <chr>  #> 1 Big Grid Pilot Program 2014                           32 ARU        733 Publi… #> 2 Big Grids                                             31 ARU       7601 Publi… #> 3 Big Grids                                            381 ARU       2226 Publi… #> 4 Bird Monitoring 2021                                 462 ARU        243 Publi… #> 5 Bird Monitoring 2022                                1175 ARU        214 Publi… #> 6 Boreal Avian Modelling Project Re-visits 2019        161 ARU        187 Publi… # Download the project report my_report <- wt_download_report(project_id = 379, sensor_id = 'ARU', reports = \"main\", weather_cols = F) %>%   tibble::as_tibble() head(my_report) #> # A tibble: 6 × 30 #>   organization project_id location location_id location_buffer_m longitude #>   <chr>             <int> <chr>          <int>             <int>     <dbl> #> 1 ABMI                379 1000-NE        65876              5500     -118. #> 2 ABMI                379 1000-NE        65876              5500     -118. #> 3 ABMI                379 1000-NE        65876              5500     -118. #> 4 ABMI                379 1000-NE        65876              5500     -118. #> 5 ABMI                379 1000-NE        65876              5500     -118. #> 6 ABMI                379 1000-NE        65876              5500     -118. #> # ℹ 24 more variables: latitude <dbl>, equipment_make <chr>, #> #   recording_id <int>, recording_date_time <chr>, task_id <int>, #> #   aru_task_status <chr>, task_duration <chr>, task_method <chr>, #> #   species_code <chr>, species_common_name <chr>, #> #   species_scientific_name <chr>, individual_order <int>, tag_id <int>, #> #   individual_count <chr>, vocalization <chr>, detection_time <dbl>, #> #   tag_duration <dbl>, rms_peak_dbfs <dbl>, tag_is_verified <chr>, … # Download all of the published A's Ecosystem Health ARU data to a single object eh_projects <- wt_get_download_summary(sensor_id = \"ARU\") %>%   tibble::as_tibble() %>%   dplyr::filter(grepl('^Ecosystem Health',project)) %>%   dplyr::mutate(data = purrr::map(.x = project_id, .f = ~wt_download_report(project_id = .x, sensor_id = \"ARU\", weather_cols = F, reports = \"main\"))) # Download the WildTrax species table spp_table <- wt_get_species() head(spp_table) #> # A tibble: 6 × 6 #>   species_id species_code species_common_name        species_class species_order #>        <dbl> <chr>        <chr>                      <chr>         <chr>         #> 1         64 LASNOC       Silver-haired Bat          MAMMALIA      Chiroptera    #> 2       4794 4794         Canidae Family             MAMMALIA      Carnivora     #> 3       4799 EACO         Eastern Cottontail         MAMMALIA      Lagomorpha    #> 4       4790 AMMO         American Moose (Subspecie… MAMMALIA      Artiodactyla  #> 5       4795 4795         Caprini Tribe              MAMMALIA      Artiodactyla  #> 6       4833 4833         Mustelidae Family          MAMMALIA      Carnivora     #> # ℹ 1 more variable: species_scientific_name <chr>"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"audio-data-management","dir":"Articles","previous_headings":"","what":"Audio data management","title":"Audio data concepts","text":"Autonomous recording units (ARUs) remote cameras collect data environment means capturing acoustic visual signals, respectively. ARUs used survey variety species birds, amphibians, bats, since taxa give reliable, identifiable signals. signals produced activities, , territory defense mating. Environmental sensors designed record sound images autonomously long periods time, can accrue large amount data.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"audio-file-formats","dir":"Articles","previous_headings":"Audio data management","what":"Audio file formats","title":"Audio data concepts","text":"three major audio file types used within wildRtrax: wac, flac wav wac proprietary, lossless compressed file format developed Wildlife Acoustics wav standard, ubiquitous uncompressed audio file format flac lossless compressed format might also working mp3 lossy compressed audio file format. can access objects wave_t $ normal list. header = FALSE reading entire wav file, can access slots S4 object using @.","code":"file <- fs::dir_ls(path = \".\", regexp = \"*.wav\")  wave_t <- tuneR::readWave(file, header = T) #True header format  wave_f <- tuneR::readWave(file, header = F)  list(wave_t, wave_f) sound_length_S4 <- round((wave_f@left / wave_f@samp.rate), 2)  #Is equivalent to: sound_length_list <- wave_t$samples / wave_t$sample.rate  sound_length_list"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"spectrograms","dir":"Articles","previous_headings":"Audio data management","what":"Spectrograms","title":"Audio data concepts","text":"spectrogram visual representation spectrum frequencies audio signal varies time (Wikipedia). Fast-Fourier Transform converts waveform spectrogram. Spectrograms can used identify wildlife signals unique spectral signature. Generally speaking, three pieces information can use identifying signal spectrogram: Length time (e.g. seconds, minutes) signal via x-axis Frequency range signal via y-axis Hz (hertz) Relative amplitude signal via z-axis dBFS (decibels relative full scale) maximum frequency spectrogram always sample rate / 2, also called Nyquist Frequency. Let’s create spectrogram get better look audio files. ’s one way using ggspectro seewave. SoX also powerful command line tool can build spectrograms well. Processing time much faster given R doesn’t read file S4 wave object. later.","code":"#Plot a spectrogram v <- seewave::ggspectro(tuneR::readWave(file, from = 0, to = 60, units = \"seconds\"), ovlp = 50) + ggplot2::geom_tile(aes(fill=amplitude)) + theme_bw() #Or try a bash command using SoX  #cd /path/to/file && for file in *.wav; do outfile=\"${file%.*}.png\"; title_in_pic=\"${file%.*}\"; sox \"$file\" -n spectrogram -l -m -t \"$title_in_pic\" -o \"$outfile\"; done"},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"from-the-field-to-the-office","dir":"Articles","previous_headings":"Audio data management","what":"From the field to the office","title":"Audio data concepts","text":"Familiarity processes, protocols, equipment data important first step understanding manage environmental sensor data. Check study design monitoring plan ensure correctly managing data prior heading field. wildRtrax doesn’t focus field components data flows heavily dependent . Acoustic data certain metadata dependencies can extracted raw data. robust field visit metadata important support quality control process media.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"metadata-dependencies-for-acoustic-data","dir":"Articles","previous_headings":"Audio data management","what":"Metadata dependencies for acoustic data","title":"Audio data concepts","text":"wildRtrax prefers file name string data deriving composed two parts: spatial component temporal component. call fields location recording_date_time audio respectively. location, date time critical pieces information collected checked visiting environmental sensors field.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/audio-data-concepts.html","id":"data-volume-storage-and-computing-power","dir":"Articles","previous_headings":"Audio data management","what":"Data volume, storage and computing power","title":"Audio data concepts","text":"Collecting lots data environmental sensors easy. ways can reduce collect process? community analysis require broad spectrum range record analyze data collected account imperfect detection. Whereas single multi-species approach, may need look narrow frequency range order detect species. know frequency range species vocalizes , may able change sampling rate, apply band-pass filter compress data methods inherently reduce data quality favour also reducing data volume. complex acoustic information comes larger files.","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"what-is-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"What is wildRtrax?","title":"Introduction","text":"wildRtrax, pronounced ‘wild-R-tracks’, R package ecologists advanced users work environmental sensors autonomous recording units (ARUs) remote cameras. contains functions designed meet needs order organize, analyze standardize data WildTrax infrastructure. wildRtrax iis self-contained must run R statistical environment, also depends many R packages. wildRtrax free software distributed MIT License (c) 2023.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"what-is-wildtrax","dir":"Articles","previous_headings":"Introduction","what":"What is WildTrax?","title":"Introduction","text":"WildTrax web-enabled portal designed manage, store, process, share discover environmental sensor data biological data extracted media. WildTrax developed Alberta Biodiversity Monitoring Institute Bioacoustic Unit.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"why-did-you-build-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"Why did you build wildRtrax?","title":"Introduction","text":"wildRtrax built parallel WildTrax provide additional analytics functionalities. outlining standardized harmonized procedure data intake, quality control, processing verification environmental sensor data, wildRtrax WildTrax hope provide open workflows using ARUs cameras answer biological questions order inform meaningful conservation decision-making.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"what-r-packages-does-wildrtrax-depend-on","dir":"Articles","previous_headings":"Introduction","what":"What R packages does wildRtrax depend on?","title":"Introduction","text":"wildRtrax depends multitude packages provide flexible routines work flows data management. tidyverse piping functions, standard grammar tidy data manipulation, furrr parallel computing, acoustic analysis packages: bioacoustics, tuneR, seewave. wt_run_ap function associated work flows indebted QUT Ecoacoustics Audio Analysis Software.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"how-do-i-report-a-bug-in-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"How do I report a bug in wildRtrax?","title":"Introduction","text":"think found bug wildRtrax, report developers maintainers. Please send bug reports R mailing lists, since wildRtrax standard R package. preferred forum report bugs GitHub. required order report bug - reporting issues welcomed encouraged way make wildRtrax non-buggy: bug report sufficiently detailed bug can replicated corrected Send example causes bug Send minimal data set available R Paste output error message message Specify version wildRtrax used","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"can-i-contribute-to-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"Can I contribute to wildRtrax?","title":"Introduction","text":"Yes! wildRtrax dependent user contribution feedback welcome. problems wildRtrax, may simple incomplete documentation. Feature requests also welcome, necessarily fulfilled. new feature added easy looks useful user base package, submit fully annotated code. See information please read Code Conduct.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/articles/introduction.html","id":"disclaimers","dir":"Articles","previous_headings":"Introduction","what":"Disclaimers","title":"Introduction","text":"pronoun “” throughout articles refers reader. “” refers wildRtrax team general.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex MacPhail. Author. Marcus Becker. Maintainer. Elly Knight. Author.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"MacPhail , Knight E (2023). wildRtrax: Environmental sensor data management analytics WildTrax. R package version 1.0.1, https://abbiodiversity.github.io/wildRtrax/.","code":"@Manual{,   title = {wildRtrax: Environmental sensor data management and analytics to and from WildTrax},   author = {Alex MacPhail and Elly Knight},   year = {2023},   note = {R package version 1.0.1},   url = {https://abbiodiversity.github.io/wildRtrax/}, }"},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Environmental sensor data management and analytics to and from WildTrax","text":"wildRtrax (pronounced wild-R-tracks) R package containing functions help manage analyze environmental sensor data. helps simplify entire data life cycle offering tools data pre-processing, wrangling, analysis, facilitating seamless data transfer WildTrax. wildRtrax, users can effortlessly establish end--end workflows ensure reproducibility analyses. providing consistent organized framework, package promotes transparency integrity research, making effortless share replicate results.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Environmental sensor data management and analytics to and from WildTrax","text":"can install wildRtrax directly repository :","code":"# install.packages(\"remotes\") remotes::install_github(\"ABbiodiversity/wildRtrax\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Environmental sensor data management and analytics to and from WildTrax","text":"functions begin wt_* prefix. Column names metadata align WildTrax infrastructure. goal follow work flow pre-processing, linking WildTrax, download analysis. functions built specifically ARUs 🔉, cameras 📷 point counts 🐦, others used sensors. 🦇 denotes ultrasonic functionalities. wt_audio_scanner() 🔉 wt_run_ap() 🔉 wt_glean_ap() 🔉 wt_signal_level() 🔉 wt_chop() 🔉 wt_make_aru_tasks() 🔉 wt_songscope_tags() 🔉 wt_kaleidoscope_tags() 🔉 🦇 wt_auth() 📷 🔉 🐦 🦇 wt_get_download_summary() 📷 🔉 🐦 🦇 Available reports: main, project, location, recording, image_set, image, tag, point_count, megadetector, megaclassifer, birdnet wt_get_species() 📷 🔉 🐦 🦇 wt_download_tags() 🔉 wt_summarise_cam() 📷 wt_ind_detect() 📷 wt_location_distances() 🔉 📷 🐦 🦇 wt_tidy_species() 🔉 📷 🐦 🦇 wt_replace_tmtt() 🔉 wt_make_wide() 🔉 📷 🐦 🦇 wt_format_occupancy() 🔉 🐦 wt_qpad_offsets() 🔉 🐦","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Environmental sensor data management and analytics to and from WildTrax","text":"report bugs, request additional features, get help using package, please file issue.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Environmental sensor data management and analytics to and from WildTrax","text":"wildRtrax authored created Alexander G. MacPhail, created maintained Marcus Becker created Dr. Elly Knight. Alberta Biodiversity Monitoring Institute provides ongoing support, development funding package. Many thanks Dr. Richard Hedley providing basis wt_wac_info() internal function wac file support","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Environmental sensor data management and analytics to and from WildTrax","text":"R package licensed MIT license© 2023 Marcus Becker, Alex MacPhail, Elly Knight Alberta Biodiversity Monitoring Institute.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Environmental sensor data management and analytics to and from WildTrax","text":"Please note wildRtrax released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_off.html","id":null,"dir":"Reference","previous_headings":"","what":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"Functions get offsets.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_off.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"","code":".make_off(spp, x)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_off.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"spp species offset calculation. x Dataframe .make_x function.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — .make_x","title":"Internal functions — .make_x","text":"Functions format reports qpad offset calculation.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — .make_x","text":"","code":".make_x(data, tz = \"local\", check_xy = TRUE)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions — .make_x","text":"data Dataframe output wt_make_wide function. tz Character; whether data local UTC time (\"local\", \"utc\"). Defaults \"local\". check_xy Logical; check whether coordinates within range QPAD offsets valid .","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-make_x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions — .make_x","text":"QPAD offsets, wrapped wt_qpad_offsets function.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_api_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"Generic function handle certain POST requests","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_api_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"","code":".wt_api_pr(path, ...)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_api_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"path path API ... Argument pass along POST query","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — .wt_auth","title":"Internal functions — .wt_auth","text":"Get Auth0 token assign information hidden environment","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — .wt_auth","text":"","code":".wt_auth()"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions — .wt_auth","text":"WildTrax authentication","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_auth_expired.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to check if Auth0 token has expired — .wt_auth_expired","title":"Internal function to check if Auth0 token has expired — .wt_auth_expired","text":"Check Auth0 token expired","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/dot-wt_auth_expired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to check if Auth0 token has expired — .wt_auth_expired","text":"","code":".wt_auth_expired()"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wildRtrax.html","id":null,"dir":"Reference","previous_headings":"","what":"wildRtrax: A series of advanced user functions for environmental sensor data management and an — wildRtrax","title":"wildRtrax: A series of advanced user functions for environmental sensor data management and an — wildRtrax","text":"wildRtrax R package enables environmental sensor data users create comprehensive work flows managing analyzing data.","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wildRtrax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wildRtrax: A series of advanced user functions for environmental sensor data management and an — wildRtrax","text":"Alex MacPhail agmacpha@ualberta.ca Marcus Becker mabecker89@ualberta.ca Elly Knight ecknight@ualberta.ca","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_audio_scanner.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan acoustic data to a standard format — wt_audio_scanner","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"Scans directories audio data returns standard naming conventions","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_audio_scanner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"","code":"wt_audio_scanner(path, file_type, extra_cols = F, tz = \"\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_audio_scanner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"path Character; path directory audio files wish scan. Can done recursively. file_type Character; Takes one four values: wav, wac, flac . Use \"\" directory contains many types files. extra_cols Boolean; Default set FALSE speed. TRUE, returns additional columns file duration, sample rate number channels. tz Character; Forces timezone recording files; time falls daylight savings time break, wt_audio_scanner assume next valid time. Use OlsonNames() get list valid names.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_audio_scanner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"tibble summary audio files.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_audio_scanner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"","code":"if (FALSE) { wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T, tz = \"US/Mountain\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate into WildTrax — wt_auth","title":"Authenticate into WildTrax — wt_auth","text":"Obtain Auth0 credentials using WT_USERNAME WT_PASSWORD stored environment variables","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate into WildTrax — wt_auth","text":"","code":"wt_auth(force = FALSE)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate into WildTrax — wt_auth","text":"force Logical; whether force re-authentication even token expired. Defaults FALSE.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate into WildTrax — wt_auth","text":"","code":"if (FALSE) { # Authenticate first: wt_auth(force = FALSE) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_chop.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment a large audio file — wt_chop","title":"Segment a large audio file — wt_chop","text":"\"Chops\" wav file many smaller files desired duration","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_chop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment a large audio file — wt_chop","text":"","code":"wt_chop(input = NULL, segment_length = NULL, output_folder = NULL)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_chop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment a large audio file — wt_chop","text":"input tibble; single row `wt_audio_scanner` tibble segment_length Numeric; Segment length seconds. Modulo recording exported trailing time left depending segment length used output_folder Character; output path segments stored","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_chop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segment a large audio file — wt_chop","text":"Segmented files written output_folder","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Reports — wt_download_report","title":"Download Reports — wt_download_report","text":"Download ARU, Camera, Point Count data project","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Reports — wt_download_report","text":"","code":"wt_download_report(project_id, sensor_id, reports, weather_cols = TRUE)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Reports — wt_download_report","text":"project_id Numeric; project ID number like download data . Use wt_get_download_summary() retrieve IDs. sensor_id Character; Can either \"ARU\", \"CAM\", \"PC\". reports Character; report type returned. Multiple values accepted concatenated string. weather_cols Logical; want include weather information stations? Defaults TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Reports — wt_download_report","text":"multiple report types requested, list object returned; one, dataframe.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Reports — wt_download_report","text":"Valid values argument report sensor_id = \"CAM\" currently : main project location image_report image_set tag megadetector megaclassifier definitions Valid values argument report sensor_id = \"ARU\" currently : main project location recording tag birdnet definitions Valid values argument report sensor_id = \"PC\" currently : main project location point count definitions","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Reports — wt_download_report","text":"","code":"if (FALSE) { # Authenticate first: wt_auth() a_camera_project <- wt_download_report( project_id = 397, sensor_id = \"CAM\", reports = c(\"tag\", \"image_set\"), weather_cols = TRUE)  an_aru_project <- wt_download_report( project_id = 47, sensor_id = \"ARU\", reports = c(\"main\", \"birdnet\"), weather_cols = TRUE) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Download acoustic tags — wt_download_tags","title":"Download acoustic tags — wt_download_tags","text":"Downloads acoustic tags (mp3 jpg) organized format purposes.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download acoustic tags — wt_download_tags","text":"","code":"wt_download_tags(input, output, clip_type = c(\"spectrogram\", \"audio\"))"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download acoustic tags — wt_download_tags","text":"input data frame tibble tag report .e. wt_download_report(reports = \"tag\") output Directory store tags clip_type Character; either spectrogram audio clips","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download acoustic tags — wt_download_tags","text":"organized folder clips tags output directory. Assigning wt_download_tags object return table form data functions returning effects output directory","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_download_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download acoustic tags — wt_download_tags","text":"","code":"if (FALSE) { dat.report <- wt_download_report(reports = \"tag\") wt_download_tags(input = my_tag_data) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_flac_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant metadata from a flac file — wt_flac_info","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"Scrape relevant information flac file","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_flac_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"","code":"wt_flac_info(path)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_flac_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"path Character; flac file path","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_flac_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"list relevant information","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_format_occupancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","title":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","text":"function formats summary report wt_download_report() function unmarked object occupancy modelling. current version includes formatting ARU sensor single species single season models.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_format_occupancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","text":"","code":"wt_format_occupancy(data, species, siteCovs = NULL)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_format_occupancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","text":"data Summary report WildTrax observations wt_download_report() function. Currently functioning ARU sensor. species Character; four-letter alpha code species desired occupancy modelling. siteCovs Optional dataframe site covariates. Must contain column values location field data, one row per unique value location (.e., one row per site).","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_format_occupancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","text":"object class unmarkedFrameOccu. See ?unmarked::unmarkedFrameOccu details.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_format_occupancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format WildTrax report for occupancy modelling. — wt_format_occupancy","text":"","code":"if (FALSE) { dat.occu <- wt_format_occupancy(dat, species=\"CONI\", siteCovs=NULL) mod <- occu(~ 1 ~ 1, dat.occu) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_download_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get download summary — wt_get_download_summary","title":"Get download summary — wt_get_download_summary","text":"Obtain table listing projects user able download data ","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_download_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get download summary — wt_get_download_summary","text":"","code":"wt_get_download_summary(sensor_id)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_download_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get download summary — wt_get_download_summary","text":"sensor_id Can either \"ARU\" \"CAM\"","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_download_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get download summary — wt_get_download_summary","text":"dataframe listing projects user can download data , including: project name, id, year, number tags, status.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_download_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get download summary — wt_get_download_summary","text":"","code":"if (FALSE) { # Authenticate first: wt_auth() wt_get_download_summary(sensor_id = \"ARU\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the WildTrax species table — wt_get_species","title":"Get the WildTrax species table — wt_get_species","text":"Request WildTrax species table","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the WildTrax species table — wt_get_species","text":"","code":"wt_get_species()"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the WildTrax species table — wt_get_species","text":"tibble WildTrax species table","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_get_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the WildTrax species table — wt_get_species","text":"","code":"if (FALSE) {  wt_species <- wt_get_species()  }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_glean_ap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"function use list media files wt_* work flow outputs wt_run_ap order generate summary plots acoustic indices long-duration false-colour spectrograms. can viewed \"final step\" interpreting acoustic index LDFC values recordings.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_glean_ap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"","code":"wt_glean_ap(x = NULL, input_dir, purpose = c(\"quality\", \"abiotic\", \"biotic\"))"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_glean_ap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"x data frame tibble; must contain file name. Use output `wt_audio_scanner`. input_dir Character; folder path outputs `wt_run_ap` stored. purpose Character; type filtering can choose ","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_glean_ap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"Output return merged tibble information, summary plots indices LDFC","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_glean_ap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"","code":"if (FALSE) { wt_glean_ap(x = wt_audio_scanner_data, input_dir = \"/path/to/my/files\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_ind_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate independent detections in your camera data — wt_ind_detect","title":"Evaluate independent detections in your camera data — wt_ind_detect","text":"Create independent detections dataframe using camera data WildTrax","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_ind_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate independent detections in your camera data — wt_ind_detect","text":"","code":"wt_ind_detect(   x,   threshold,   units = \"minutes\",   datetime_col = image_date_time,   remove_human = TRUE,   remove_domestic = TRUE )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_ind_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate independent detections in your camera data — wt_ind_detect","text":"x dataframe camera data; preferably, main report wt_download_report(). threshold Numeric; time interval parse independent detections. units threshold unit. Can one three values, \"seconds\", \"minutes\", \"hours\". datetime_col Defaults image_date_time; column indicating timestamp image. remove_human Logical; human human-related tags (e.g. vehicles) removed? Defaults TRUE. remove_domestic Logical; domestic animal tags (e.g. cows) removed? Defaults TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_ind_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate independent detections in your camera data — wt_ind_detect","text":"dataframe independent detections camera data, based threshold specified. df wil include information duration detection, number images, average number individual animals per image, max number animals detection.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_ind_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate independent detections in your camera data — wt_ind_detect","text":"","code":"if (FALSE) { detections <- wt_ind_detect(x = df, threshold = 30, units = \"minutes\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"wt_kaleidoscope_tags Takes classifier output Wildlife Acoustics Kaleidoscope converts WildTrax tag template upload","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"","code":"wt_kaleidoscope_tags(input, output, tz, freq_bump = T)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"input Character; path input csv output Character; Path output file stored tz Character; Assigns timezone recording files. Use OlsonNames() get list valid names. freq_bump Boolean; Set TRUE add buffer frequency values exported Kaleidoscope. Helpful getting context around signal species verification","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"csv formatted WildTrax tag template","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":"wt-kaleidoscope-tags","dir":"Reference","previous_headings":"","what":"wt_kaleidoscope_tags","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"NA","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_kaleidoscope_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload hits from a Wildlife Acoustics classifier — wt_kaleidoscope_tags","text":"","code":"if (FALSE) { wt_kaleidoscope_tags(input = input.csv, output = tags.csv, tz = \"\", freq_bump = T) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_location_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"General convenience functions — wt_location_distances","title":"General convenience functions — wt_location_distances","text":"Takes input latitude longitudes computes distances set valid points","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_location_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General convenience functions — wt_location_distances","text":"","code":"wt_location_distances(input_from_tibble = NULL, input_from_file = NULL)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_location_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General convenience functions — wt_location_distances","text":"input_from_tibble Use tibble constructed distinct list location names, latitude longitude input_from_file Use file downloaded either organization project","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_location_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General convenience functions — wt_location_distances","text":"three-column tibble distances location","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_location_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General convenience functions — wt_location_distances","text":"","code":"if (FALSE) { df <- wt_location_distances(input = my_location_tibble, input_from_file) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Linking media to WildTrax — wt_make_aru_tasks","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"wt_make_aru_tasks uses wt_audio_scanner input tibble create task template upload WildTrax project.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"","code":"wt_make_aru_tasks(   input,   output = NULL,   task_method = c(\"1SPM\", \"1SPT\", \"None\"),   task_length )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"input Character; input wt_audio_scanner tibble. wt_audio_scanner tibble, data must contain minimum location, recording_date_time file_path columns. output Character; Path output task csv file stored task_method Character; Method type task. Options 1SPM, 1SPT None. See Methods(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) WildTrax details. task_length Numeric; Task length seconds. Must 1 - 1800 can two decimal places.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"csv formatted WildTrax task template important media uploaded WildTrax, first trying generate tasks project. parallel, can select files want upload generate tasks project.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"Prepare media data upload WildTrax following suite functions help wrangle media data together order upload WildTrax. can make tasks(https://www.wildtrax.ca/home/resources/guide/projects/aru-projects.html) tags(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) using results wt_audio_scanner tibble hits one two Wildlife Acoustics programs Songscope() Kaleidoscpe(). Creating tasks media","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"wt-make-aru-tasks","dir":"Reference","previous_headings":"","what":"wt_make_aru_tasks","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"NA","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_aru_tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"","code":"if (FALSE) { wt_make_tasks(input = my_audio_tibble, output = tasks.csv, task_method = \"1SPT\", task_length = 180) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a wide survey by species dataframe. — wt_make_wide","title":"Convert to a wide survey by species dataframe. — wt_make_wide","text":"function converts long-formatted report wide survey species dataframe abundance values. function best preceded thewt_tidy_species wt_replace_tmtt functions  ensure 'TMTT' amphibian calling index values converted zeros.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a wide survey by species dataframe. — wt_make_wide","text":"","code":"wt_make_wide(data, sound = \"all\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a wide survey by species dataframe. — wt_make_wide","text":"data WildTrax main report tag report wt_download_report() function. sound Character; vocalization type(s) retain (\"\", \"song\", \"call\", \"non-vocal\"). Can used remove certain types detections. Defaults \"\" (.e., filtering).","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a wide survey by species dataframe. — wt_make_wide","text":"dataframe identical input observations specified groups removed.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_make_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a wide survey by species dataframe. — wt_make_wide","text":"","code":"if (FALSE) { dat.clean <- wt_tidy_species(dat) dat.tmtt <- wt_replace_tmtt(dat.clean) dat.wide <- wt_make_wide(dat.tmtt, sound=\"all\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QPAD offsets — wt_qpad_offsets","title":"Get QPAD offsets — wt_qpad_offsets","text":"function calculates statistical offsets account survey-specific species-specific variation availability detection perceptibility birds. function requires download QPAD R package used output wt_format_wide function","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QPAD offsets — wt_qpad_offsets","text":"","code":"wt_qpad_offsets(data, species = \"all\", version = 3, together = TRUE)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QPAD offsets — wt_qpad_offsets","text":"data Dataframe output wt_make_wide() function. species Character; species offset calculation. Can list 4-letter AOU codes (e.g., c(\"TEWA\", \"OSFL\", \"OVEN\")) \"\" calculate offsets every species input dataframe offsets available. Defaults \"\". version Numeric; version QPAD offsets use (2, 3). Defaults 3. together Logical; whether offsets bound input dataframe returned separate object.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QPAD offsets — wt_qpad_offsets","text":"object class unmarkedFrameOccu. See unmarked::unmarkedFrameOccu details.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get QPAD offsets — wt_qpad_offsets","text":"Solymos et al. 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047-1058.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_qpad_offsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get QPAD offsets — wt_qpad_offsets","text":"","code":"if (FALSE) { devtools::install_github(\"borealbirds/QPAD\")  dat.clean <- wt_tidy_species(dat) dat.tmtt <- wt_replace_tmtt(dat.clean) dat.wide <- wt_make_wide(dat.tmtt, sound=\"all\") dat.qpad <- wt_qpad_offsets(dat.wide, species=\"all\", version=3, together = TRUE) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_replace_tmtt.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","title":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","text":"function uses lookup table model-predicted values replace 'TMTT' entries listener-processed ARU data WildTrax. model-predicted values produced using estimated abundances 'TMTT' entries mixed effects model Poisson distribution random effects species observer.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_replace_tmtt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","text":"","code":"wt_replace_tmtt(data, calc = \"round\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_replace_tmtt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","text":"data Dataframe WildTrax observations, example summary report. calc Character; method convert model predictions integer (\"round\", \"ceiling\", \"floor\"). See ?round() details.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_replace_tmtt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","text":"dataframe identical input 'TMTT' entries abundance column replaced integer values.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_replace_tmtt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace 'TMTT' abundance entries with model-predicted values. — wt_replace_tmtt","text":"","code":"if (FALSE) { dat.tmtt <- replace_tmtt(dat, calc=\"round\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Build automatic reports from analyzed data in wildRtrax — wt_report","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"Build reports automatically using custom settings","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"","code":"wt_report(data, what = c(NULL, \"conclusion\"), output_filename = \"report\")"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"data Input data wt_download_report NULL, conclusion output_filename Character; name output file name","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"document report","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":"wt-report-details","dir":"Reference","previous_headings":"","what":"wt_report details","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"Build customized reports WildTrax data","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build automatic reports from analyzed data in wildRtrax — wt_report","text":"","code":"if (FALSE) { wt_report(data = my_data, what = c(NULL, \"conclusion\")) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_run_ap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a variety of acoustic index output from audio — wt_run_ap","title":"Get a variety of acoustic index output from audio — wt_run_ap","text":"generating acoustic indices false-colour spectrograms using QUT Ecoacoustics Analysis Programs software. See https://github.com/QutEcoacoustics/audio-analysis information usage installation AP software. Note function relies software installed locally. function batch calculate summary spectral acoustic indices generate false-colour spectrograms folder audio files using Towsey.Acoustic configuration (yml) file AP software. can use output `wt_audio_scanner` function, define local folder audio files directly.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_run_ap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a variety of acoustic index output from audio — wt_run_ap","text":"","code":"wt_run_ap(   x = NULL,   fp_col = file_path,   audio_dir = NULL,   output_dir,   path_to_ap = \"C:\\\\AP\\\\AnalysisPrograms.exe\" )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_run_ap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a variety of acoustic index output from audio — wt_run_ap","text":"x (optional) data frame tibble; must contain absolute audio file path file name. Use output `wt_audio_scanner`. fp_col x supplied, column containing audio file paths. Defaults file_path. audio_dir (optional) Character; path directory storing audio files. output_dir Character; path directory want outputs stored. path_to_ap Character; file path AnalysisPrograms software package. Defaults \"C:\\AP\\AnalysisPrograms.exe\".","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_run_ap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a variety of acoustic index output from audio — wt_run_ap","text":"Output return specific root directory","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_signal_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get signals from specific windows of audio — wt_signal_level","title":"Get signals from specific windows of audio — wt_signal_level","text":"Signal level uses amplitude frequency thresholds order detect signal.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_signal_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get signals from specific windows of audio — wt_signal_level","text":"","code":"wt_signal_level(   path,   fmin = 500,   fmax = NA,   threshold,   channel = \"left\",   aggregate = NULL )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_signal_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get signals from specific windows of audio — wt_signal_level","text":"path path wav file fmin frequency minimum fmax frequency maximum threshold desired threshold channel Choose \"left\" \"right\" channel aggregate Aggregate detections number seconds, desired","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_signal_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get signals from specific windows of audio — wt_signal_level","text":"list object containing following four elements: output (dataframe), aggregated (boolean), channel (character), threshold (numeric)","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_signal_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get signals from specific windows of audio — wt_signal_level","text":"","code":"if (FALSE) { df <- wt_signal_level(path = \"\") }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_songscope_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes the classifier output from Wildlife Acoustics Songscope and converts them into a WildTrax tag template for upload — wt_songscope_tags","title":"Takes the classifier output from Wildlife Acoustics Songscope and converts them into a WildTrax tag template for upload — wt_songscope_tags","text":"Takes classifier output Wildlife Acoustics Songscope converts WildTrax tag template upload","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_songscope_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes the classifier output from Wildlife Acoustics Songscope and converts them into a WildTrax tag template for upload — wt_songscope_tags","text":"","code":"wt_songscope_tags(   input,   output = c(\"env\", \"csv\"),   my_output_file = NULL,   species_code,   vocalization_type,   score_filter,   method = c(\"USPM\", \"1SPT\"),   task_length )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_songscope_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes the classifier output from Wildlife Acoustics Songscope and converts them into a WildTrax tag template for upload — wt_songscope_tags","text":"input Character; path input csv output Character; Path output file stored my_output_file Character; Path output file species_code Character; Short-hand code species (see wt_get_species) vocalization_type Character; vocalization type either Song, Call, Non-Vocal, Night flight Feeding Buzz score_filter Numeric; Filter detections score method Character; Include options 1SPT, 1SPM None task_length Numeric; length task seconds","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_songscope_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes the classifier output from Wildlife Acoustics Songscope and converts them into a WildTrax tag template for upload — wt_songscope_tags","text":"csv formatted WildTrax tag template","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of analysis functions — wt_summarise_cam","title":"Set of analysis functions — wt_summarise_cam","text":"function takes independent detection data summarises location, specified time interval, species.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of analysis functions — wt_summarise_cam","text":"","code":"wt_summarise_cam(   detect_data,   raw_data,   time_interval = \"day\",   variable = \"detections\",   output_format = \"wide\",   species_col = species_common_name,   effort_data = NULL,   project_col = NULL,   station_col = NULL,   start_col = NULL,   end_col = NULL )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set of analysis functions — wt_summarise_cam","text":"detect_data Detection data generated wt_ind_det(). raw_data raw camera tag data, used infer effort (.e. date ranges operation) camera. Optionally, can supply effort_data directly instead. time_interval Character; Can either \"full\", \"month\", \"week\", \"day\". variable Character; Can either \"presence\", \"detections\", \"counts\", \"\" (want three). output_format Character; format dataframe returned . Can either \"wide\" \"long\". species_col Defaults common_name. column referring species. Use switch common scientific names species, . effort_data Optionally supply effort data. project_col column referring project effort data. station_col column referring individual camera station/location effort data. start_col column indicating start date camera location end_col column indicating end date camera location","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set of analysis functions — wt_summarise_cam","text":"dataframe summarising camera data location, time interval, species.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":"summarise-your-camera-data-by-location-time-interval-and-species-","dir":"Reference","previous_headings":"","what":"Summarise your camera data by location, time interval, and species.","title":"Set of analysis functions — wt_summarise_cam","text":"NA","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_summarise_cam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set of analysis functions — wt_summarise_cam","text":"","code":"if (FALSE) { summary <- wt_summarise_cam( x, y, time_interval = \"day\", variable = \"detections\", output_format = \"wide\" ) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_tidy_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","title":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","text":"function filters species provided WildTrax reports groups interest. groups available filtering mammal, bird, amphibian, abiotic, insect, unknown. Zero-filling functionality available ensure surveys retained dataset observations group interest available.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_tidy_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","text":"","code":"wt_tidy_species(   data,   remove = c(\"mammal\", \"amphibian\", \"abiotic\", \"insect\", \"bird\", \"unknown\"),   zerofill = TRUE )"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_tidy_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","text":"data WildTrax main report tag report wt_download_report() function. remove Character; groups filter report (\"mammal\", \"bird\", \"amphibian\", \"abiotic\", \"insect\", \"unknown\"). Defaults retaining bird group . zerofill Logical; indicates zerofilling completed. TRUE, unique surveys observations filtering added dataset \"NONE\" value species_code /species_common_name. FALSE, surveys observations retained groups returned. Default TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_tidy_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","text":"dataframe identical input observations specified groups removed.","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_tidy_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter the species list to the groups of interest from wt_get_species — wt_tidy_species","text":"","code":"if (FALSE) { dat.tmtt <- wt_tidy_species(dat, remove=c(\"mammal\", \"amphibian\", \"abiotic\", \"insect\", \"unknown\"), zerofill = TRUE) }"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_wac_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant metadata from a wac file — wt_wac_info","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"Scrape relevant information wac (Wildlife Acoustics) file","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_wac_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"","code":"wt_wac_info(path)"},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_wac_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"path Character; wac file path","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/reference/wt_wac_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"list relevant information","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/news/index.html","id":"wildrtrax-101","dir":"Changelog","previous_headings":"","what":"wildRtrax 1.0.1","title":"wildRtrax 1.0.1","text":"Patching API errors wt_download_report() Adding additional articles acoustic data wrangling","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildRtrax/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildRtrax 1.0.0","text":"Addition flac file type Addition extra_cols argument enable faster scanning argument set FALSE. also deals headerless file errors (#2) Enabled parallel file scanning; microbenchmarked base scanning 5.6x faster dual-core machine Moved progress bars progressr package Addition wt_glean_ap() function acoustic pre-processing work flow extract desired data wt_run_ap() output Addition linking functions order add desired media metadata WildTrax: wt_make_aru_tasks(), wt_kaleidoscope_tags() wt_songscope_tags() Addition convenience functions: wt_location_distances() wt_chop() Alignment wt_download_report() column headers released WildTrax Phase 8 resolve (#3, #4, #5) Addition additional acoustic functions prepare data analysis: wt_replace_tmtt(), wt_make_wide(), wt_format_occupancy(), wt_qpad_offsets() Addition wt_get_species() download WildTrax species table wt_tidy_species() filter various taxa Addition wt_download_tags() download images, spectrograms audio clips tags Experimental testing customizable, automated reports wt_report() Long-form documentation available full-cycle environmental work flows new articles usage acoustic camera data analysis functions","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/news/index.html","id":"minor-improvements-and-bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"wildRtrax 1.0.0","text":"Moved wt_run_ap future_map dopar loop lessen package dependencies Quiet console output wt_run_ap() Windows users Added NEWS.md file track changes package Renamed wt_ind_det wt_ind_detect","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/news/index.html","id":"deprecated-1-0-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"wildRtrax 1.0.0","text":"wt_prob_det()","code":""},{"path":"https://abbiodiversity.github.io/wildRtrax/news/index.html","id":"wildrtrax-010","dir":"Changelog","previous_headings":"","what":"wildRtrax 0.1.0","title":"wildRtrax 0.1.0","text":"wt_audio_scanner(), wt_run_ap(), wt_signal_level(), wt_prob_det() wt_ind_det, wt_summarise_cam wt_auth, wt_get_download_summary, wt_download_report","code":""}]
