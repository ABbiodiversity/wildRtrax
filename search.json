[{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to wildRtrax","title":"Contributing to wildRtrax","text":"outlines propose change wildRtrax. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to wildRtrax","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to wildRtrax","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to wildRtrax","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ABbiodiversity/wildRtrax\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to wildRtrax","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to wildRtrax","text":"Please note wildRtrax project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 wildrtrax authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with wildRtrax","title":"Getting help with wildRtrax","text":"Thanks using wildRtrax! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with wildRtrax","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with wildRtrax","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with wildRtrax","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-data-wrangling.html","id":"data-wrangling","dir":"Articles","previous_headings":"","what":"Data wrangling","title":"Acoustic data wrangling","text":"Now let’s start cleaning things bit. don’t need certain abiotic mammal codes let’s remove wt_tidy_species(), 15% detections mammals. Next, convert TMTT (many tag) counts numeric: finally, widen data species matrix.","code":"my_tidy_data <- wt_tidy_species(my_report, remove = c(\"mammal\"), zerofill=F)  # Difference in rows round((nrow(my_tidy_data)/nrow(my_report)),2) #> [1] 0.85 my_tmtt_data <- wt_replace_tmtt(data = my_tidy_data, calc = \"round\") my_wide_data <- wt_make_wide(data = my_tmtt_data, sound = \"all\")  head(my_wide_data) #> # A tibble: 6 × 77 #>   organization project_id location  location_id location_buffer_m longitude #>   <chr>             <dbl> <chr>           <dbl> <lgl>                 <dbl> #> 1 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 2 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 3 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 4 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 5 BU                  620 CHPP-WP-2       94518 NA                    -110. #> 6 BU                  620 CHPP-WP-2       94518 NA                    -110. #> # ℹ 71 more variables: latitude <dbl>, equipment_make <lgl>, #> #   equipment_model <lgl>, recording_id <dbl>, recording_date_time <dttm>, #> #   task_id <dbl>, aru_task_status <chr>, task_duration <dbl>, #> #   task_method <chr>, AMCR <dbl>, AMRE <dbl>, AMRO <dbl>, BAOR <dbl>, #> #   BBMA <dbl>, BCCH <dbl>, BHCO <dbl>, BHGR <dbl>, CANG <dbl>, CEDW <dbl>, #> #   CHSP <dbl>, CONI <dbl>, COPO <dbl>, CORA <dbl>, COYE <dbl>, DEJU <dbl>, #> #   DUFL <dbl>, EAPH <dbl>, GCKI <dbl>, GHOW <dbl>, HAWO <dbl>, HOWR <dbl>, …"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-data-wrangling.html","id":"offsets","dir":"Articles","previous_headings":"","what":"Offsets","title":"Acoustic data wrangling","text":"Now can calculate statistical offsets account imperfect detection following QPAD method.","code":"my_offset_data <- wt_qpad_offsets(data = my_wide_data, species = \"all\", version = 3, together = TRUE) #> Extracting covariates for offset calculation. This may take a moment. #>  #> Loading QPAD estimates... BAM QPAD parameter estimates loaded, version 3  #>  #> Calculating offsets... #>  AMCR #>  AMRE #>  AMRO #>  BAOR #>  BBMA #>  BCCH #>  BHCO #>  CEDW #>  CHSP #>  CORA #>  COYE #>  DEJU #>  DUFL #>  EAPH #>  GCKI #>  HAWO #>  HOWR #>  LEFL #>  LISP #>  MODO #>  OCWA #>  PISI #>  RBNU #>  RCKI #>  RECR #>  RTHU #>  SAVS #>  SWTH #>  TEWA #>  TRES #>  VEER #>  WAVI #>  WBNU #>  WCSP #>  WEWP #>  WISN #>  YBSA #>  YEWA #>  YRWA  head(my_offset_data) #>   organization project_id  location location_id location_buffer_m longitude #> 1           BU        620 CHPP-WP-1       94515                NA -110.2968 #> 2           BU        620 CHPP-WP-1       94515                NA -110.2968 #> 3           BU        620 CHPP-WP-1       94515                NA -110.2968 #> 4           BU        620 CHPP-WP-1       94515                NA -110.2968 #> 5           BU        620 CHPP-WP-2       94518                NA -110.2974 #> 6           BU        620 CHPP-WP-2       94518                NA -110.2974 #>   latitude equipment_make equipment_model recording_id recording_date_time #> 1 49.65529             NA              NA       211651 2021-07-05 04:32:00 #> 2 49.65529             NA              NA       211677 2021-07-09 06:06:00 #> 3 49.65529             NA              NA       211676 2021-07-10 05:07:00 #> 4 49.65529             NA              NA       211662 2021-07-10 22:10:00 #> 5 49.65272             NA              NA       211669 2021-07-04 02:40:00 #> 6 49.65272             NA              NA       285273 2021-07-05 02:40:00 #>   task_id aru_task_status task_duration task_method AMCR AMRE AMRO BAOR BBMA #> 1  180890     Transcribed           180        1SPT    0    0    0    0    0 #> 2  180916     Transcribed           180        1SPT    0    0    0    0    0 #> 3  180915     Transcribed           180        1SPT    1    1    4    0    1 #> 4  180901     Transcribed           180        1SPT    0    0    1    0    0 #> 5  180908     Transcribed           180        1SPT    0    0    0    0    0 #> 6  264441     Transcribed           180        1SPT    0    0    0    0    0 #>   BCCH BHCO BHGR CANG CEDW CHSP CONI COPO CORA COYE DEJU DUFL EAPH GCKI GHOW #> 1    0    0    1    0    0    0    0    0    2    0    0    0    0    0    1 #> 2    0    0    1    0    0    1    0    0    0    0    0    0    0    0    0 #> 3    0    0    0    0    0    0    0    0    2    0    1    0    0    0    0 #> 4    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 5    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 6    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #>   HAWO HOWR LAZB LEFL LIBA LIRA LISP LITF LIWI MGWA MOBA MODO MORA MOWI OCWA #> 1    0    0    0    2    0    0    0    0    0    0    0    1    0    0    0 #> 2    0    3    1    2    0    0    0    0    0    0    0    0    0    0    0 #> 3    0    2    0    1    0    0    0    0    0    0    0    1    0    0    0 #> 4    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 5    0    0    0    0    0    0    0    0    1    0    0    0    0    0    0 #> 6    0    0    0    0    0    1    0    0    0    0    0    0    0    1    0 #>   PISI RBNU RCKI RECR RNSA RTHU SAVS SWTH TEWA TRES UNBI UNKN UNPA UNSA UNTR #> 1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 2    0    2    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 3    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> 4    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0 #> 5    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1 #> 6    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #>   UNWA UNWX UPCH VEER WAVI WBNU WCSP WEWP WISN YBSA YEWA YRWA AMCR.off #> 1    0    0    0    1    0    0    2    1    1    0    0    0 2.370102 #> 2    0    0    0    1    0    0    2    1    0    0    2    0 2.370102 #> 3    0    0    0    1    1    0    1    1    0    0    1    0 2.370102 #> 4    0    0    0    0    0    0    0    0    0    0    0    0 2.369905 #> 5    0    0    0    0    0    0    0    0    0    0    0    0 2.370102 #> 6    0    0    0    0    0    0    0    0    0    0    0    0 2.370102 #>    AMRE.off  AMRO.off  BAOR.off   BBMA.off  BCCH.off  BHCO.off   CEDW.off #> 1 0.4167774 1.0271415 0.7239005   2.542484 0.3703048 0.1061239 0.05242081 #> 2 0.4167774 1.0271415 0.7239005   2.542484 0.3703048 0.1061239 0.05242081 #> 3 0.4167774 1.0271415 0.7239005   2.542484 0.3703048 0.1061239 0.05242081 #> 4 0.4078807 0.3843135 0.7239005 -14.091866 0.3703048 0.1061239 0.05242081 #> 5 0.4167774 1.0271415 0.7239005   2.537825 0.3703048 0.1061239 0.05242081 #> 6 0.4167774 1.0271415 0.7239005   2.537478 0.3703048 0.1061239 0.05242081 #>    CHSP.off  CORA.off  COYE.off   DEJU.off  DUFL.off  EAPH.off   GCKI.off #> 1 0.5916778  1.972791 0.8977079  0.9107690 0.1678111 0.9805074 -0.5905164 #> 2 0.5916778  1.972791 0.8977079  0.9107690 0.1678111 0.9805074 -0.5905164 #> 3 0.5916778  1.972791 0.8977079  0.9107690 0.1678111 0.9805074 -0.5905164 #> 4 0.5916778 -1.506756 0.8976880 -0.2123905 0.1678111 0.9805074 -1.2850892 #> 5 0.5916778  1.972791 0.8977079  0.9107690 0.1678111 0.9805074 -0.5905167 #> 6 0.5916778  1.972791 0.8977079  0.9107690 0.1678111 0.9805074 -0.5905167 #>    HAWO.off  HOWR.off   LEFL.off   LISP.off MODO.off  OCWA.off   PISI.off #> 1 0.4959508  1.083148 0.06602909  0.8481771 1.195639 0.6732180  0.1894495 #> 2 0.4959508  1.083148 0.06602909  0.8481771 1.195639 0.6732178  0.1894495 #> 3 0.4959508  1.083148 0.06602909  0.8481771 1.195639 0.6732158  0.1894495 #> 4 0.4959508 -1.376223 0.06590519 -2.3580608 1.109186 0.6732180 -5.6283000 #> 5 0.4959508  1.083148 0.06602909  0.8481771 1.195639 0.6732178  0.1894495 #> 6 0.4959508  1.083148 0.06602909  0.8481771 1.195639 0.6732176  0.1894495 #>    RBNU.off RCKI.off   RECR.off  RTHU.off   SAVS.off  SWTH.off TEWA.off #> 1 0.7345163 1.092762 0.08661238 -2.474842  0.9633483 1.1630042 0.271135 #> 2 0.7345163 1.092710 0.08661238 -2.474842  0.9633483 1.1630042 0.271135 #> 3 0.7345163 1.092650 0.08661238 -2.474842  0.9633483 1.1630042 0.271135 #> 4 0.7345163 1.090702 0.08661238 -2.474842 -1.3818771 0.8410931 0.271135 #> 5 0.7345163 1.092762 0.08661238 -2.474842  0.9633483 1.1630042 0.271135 #> 6 0.7345163 1.092762 0.08661238 -2.474842  0.9633483 1.1630042 0.271135 #>    TRES.off VEER.off  WAVI.off  WBNU.off WCSP.off  WEWP.off WISN.off  YBSA.off #> 1  1.020597 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460558 #> 2  1.020597 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460558 #> 3  1.020597 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460558 #> 4 -3.446437 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460557 #> 5  1.020597 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460558 #> 6  1.020597 1.310133 0.3371337 0.6905176 1.277016 0.8691736 1.917213 0.8460558 #>    YEWA.off  YRWA.off #> 1  0.441793 0.3537681 #> 2  0.441793 0.3537681 #> 3  0.441793 0.3537681 #> 4 -4.234049 0.2395314 #> 5  0.441793 0.3537681 #> 6  0.441793 0.3537681"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-data-wrangling.html","id":"occupancy-modelling","dir":"Articles","previous_headings":"","what":"Occupancy modelling","title":"Acoustic data wrangling","text":"can also perform single-season, single-species occupancy work flow using wt_format_occupancy() data downloaded.","code":"dat.occu <- wt_format_occupancy(my_report, species=\"OVEN\", siteCovs=NULL) mod <- unmarked::occu(~ 1 ~ 1, dat.occu) mod #>  #> Call: #> unmarked::occu(formula = ~1 ~ 1, data = dat.occu) #> Occupancy: #>  Estimate  SE   z P(>|z|) #>     -16.7 NaN NaN     NaN #> Detection: #>  Estimate  SE   z P(>|z|) #>     -6.46 NaN NaN     NaN #>  #> AIC: 4"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-pre-processing.html","id":"scanning-audio-files-from-a-directory","dir":"Articles","previous_headings":"","what":"Scanning audio files from a directory","title":"Acoustic pre-processing","text":"wt_audio_scanner() function reads audio files (either wac, wav flac format) local directory outputs useful metadata. might want select recordings certain times day year, filter recordings based criteria.","code":"# Plan futures future::plan(multisession)  # Scan data if (dir.exists(\".\")) {   wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T) } else {   'Can\\'\\t find this directory' } files %>%   dplyr::select(-file_path) #> # A tibble: 1,041 × 10 #>    size_Mb unsafe file_name  location recording_date_time file_type julian  year #>      <dbl> <chr>  <chr>      <chr>    <dttm>              <chr>      <dbl> <dbl> #>  1    3.51 Safe   228-NE_20… 228-NE   2021-11-21 12:35:49 wav          325  2021 #>  2  106.   Safe   228-NE_20… 228-NE   2022-03-01 00:00:00 wav           60  2022 #>  3   31.8  Safe   228-NE_20… 228-NE   2022-03-01 02:00:00 wav           60  2022 #>  4  106.   Safe   228-NE_20… 228-NE   2022-03-01 08:59:00 wav           60  2022 #>  5   31.8  Safe   228-NE_20… 228-NE   2022-03-01 10:29:00 wav           60  2022 #>  6   31.8  Safe   228-NE_20… 228-NE   2022-03-01 12:00:00 wav           60  2022 #>  7   31.8  Safe   228-NE_20… 228-NE   2022-03-01 15:00:00 wav           60  2022 #>  8   31.8  Safe   228-NE_20… 228-NE   2022-03-01 18:17:00 wav           60  2022 #>  9   31.8  Safe   228-NE_20… 228-NE   2022-03-01 20:17:00 wav           60  2022 #> 10  106.   Safe   228-NE_20… 228-NE   2022-03-02 00:00:00 wav           61  2022 #> # ℹ 1,031 more rows #> # ℹ 2 more variables: gps_enabled <lgl>, time_index <int> files %>%   dplyr::mutate(hour = as.numeric(format(recording_date_time, \"%H\"))) %>%   dplyr::filter(julian == 176,           hour %in% c(4:8)) #> # A tibble: 2 × 12 #>   file_path      size_Mb unsafe file_name location recording_date_time file_type #>   <chr>            <dbl> <chr>  <chr>     <chr>    <dttm>              <chr>     #> 1 /volumes/buda…   106.  Safe   228-NE_2… 228-NE   2022-06-25 05:35:00 wav       #> 2 /volumes/buda…    31.8 Safe   228-NE_2… 228-NE   2022-06-25 07:05:00 wav       #> # ℹ 5 more variables: julian <dbl>, year <dbl>, gps_enabled <lgl>, #> #   time_index <int>, hour <dbl>"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-pre-processing.html","id":"running-the-qut-ecoacoustics-analysisprograms-software-on-a-wt_-standard-data-set","dir":"Articles","previous_headings":"","what":"Running the QUT Ecoacoustics AnalysisPrograms software on a wt_* standard data set","title":"Acoustic pre-processing","text":"wt_run_ap() function allows run QUT Analysis Programs (AP.exe) audio data. AP generates acoustic index values false-colour spectrograms audio minute data. Note must AP program installed computer. See (Towsey et al., 2018). use wt_glean_ap() plot acoustic index long-duration false-colour spectrogram (LDFC) results.","code":"# Use the wt_* tibble to execute the AP on the files  wt_run_ap(x = my_files, output_dir = paste0(root, 'ap_outputs'), path_to_ap = '/where/you/store/AP') > # This example is from ABMI's Ecosystem Health Monitoring program >  > my_files <- wt_audio_scanner(\".../ABMI-986-SE\", file_type = \"wav\", extra_cols = ) >  > wt_glean_ap(my_files %>%  +                dplyr::mutate(hour = as.numeric(format(recording_date_time, \"%H\"))) %>% +                filter(between(julian,110,220), +                       hour %in% c(0:3,22:23)), input_dir = \".../ap_outputs\", purpose = \"biotic\") >"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-pre-processing.html","id":"applying-a-limited-amplitude-filter","dir":"Articles","previous_headings":"","what":"Applying a limited amplitude filter","title":"Acoustic pre-processing","text":"can use wt_signal_level() function search sounds exceed certain amplitude threshold.","code":"if (dir.exists(\".\")) {   signal_file <- wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T) } else {   'Can\\'\\t find this directory' }  wt_signal_level(path = signal_file$file_path,                       fmin = 0,                       fmax = 10000,                       threshold = 5,                       channel = 'left') # Run s # Return a list object, with parameters stored str(s)  # We can view the output: s['output'] # We have eleven detections that exceeded this threshold."},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/acoustic-pre-processing.html","id":"linking-data-to-wildtrax","dir":"Articles","previous_headings":"","what":"Linking data to WildTrax","title":"Acoustic pre-processing","text":"Make tasks time using wt_* standard data set wt_make_aru_tasks(). function wt_songscope_tags() reformats output obtained Wildlife Acoustics Songscope recognizer. transformation involves converting recognizer tags tags method type. makes possible upload hit tag task. Similarly, function wt_kaleidoscope_tags() performs reformatting process, Kaleidoscope instead. worth noting function targeted sonic ultrasonic species upload. ’ve already uploaded recordings WildTrax, scan media using wt_audio_scanner() relative folder path. download project data wish compare : Alternatively, go WildTrax Organization > Recordings > Manage > Download Recordings get list recordings. either filter anti-join location recording_date_time. give remaining list media processed uploaded WildTrax yet.","code":"wt_make_aru_tasks(input = files %>% select(-file_path), task_method = \"1SPT\", task_length = 180) # Convert Songscope output into WildTrax tags wt_songscope_tags(   input,    output = c(\"env\", \"csv\"),   my_output_file = NULL,   species_code,   vocalization_type,   score_filter,   method = c(\"USPM\", \"1SPT\"),   task_length )  # Convert Kaleidoscope output into WildTrax tags wt_kaleidoscope_tags(   input,    output,   tz,    freq_bump = T) # Add a frequency buffer to the tag, e.g. 20000 kHz  songscope_tags my_files <- wt_audio_scanner(path = '/my/BigGrid/files', file_type = 'all', extra_cols = F) my_projects <- wt_get_download_summary(sensor_id = 'ARU') %>%   tibble::as_tibble() %>%   filter(grepl('Big Grids',project)) %>% # Customized as needed   mutate(data = purrr::map(.x = project_id, .f = ~wt_download_report(project_id = .x, sensor_id = 'ARU', weather_cols = F, reports = 'main')))"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/apis.html","id":"set-up-wildtrax-credentials","dir":"Articles","previous_headings":"","what":"Set up WildTrax credentials","title":"APIs","text":"obtain Auth0 token, must login WildTrax using Auth0 (Google authorization currently supported). also need store WildTrax user name password environment variables.","code":"# Note that you need to use 'WT_USERNAME' and 'WT_PASSWORD' Sys.setenv(WT_USERNAME = 'guest', WT_PASSWORD = 'Apple123')"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/apis.html","id":"authenticate","dir":"Articles","previous_headings":"","what":"Authenticate","title":"APIs","text":"Next, use wt_auth() function authenticate. Auth0 token obtained last 12 hours. time, need re-authenticate.","code":"# Authenticate wt_auth() #> Authentication into WildTrax successful."},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/apis.html","id":"making-api-calls","dir":"Articles","previous_headings":"","what":"Making API calls","title":"APIs","text":"authenticated, can now use various functions call upon WildTrax API. instance, can use wt_get_download_summary() see basic metadata projects can download data . Using project_id number download summary can use wt_download_report() access species data. can also find project_id number url WildTrax project, e.g. https://www.wildtrax.ca/home/aru-tasks.html?projectId=605&sensorId=ARU. easy way download multiple projects use wt_get_download_summary() filter substring order get project ids download data. Downloading WildTrax species table wt_get_species() also grants access valuable columns provides complete list species currently supported WildTrax. WildTrax also pre-formats ARU point count (PC) data depending type analysis wish perform. See Boreal Avian Modelling project website GitHub repositories find integration avian point count ARU data.","code":"# Download the project summary you have access to my_projects <- wt_get_download_summary(sensor_id = 'ARU')  head(my_projects) #>   organization_id organization                                 project #> 1               5         ABMI    ABMI Adopt-a-Camera ARU Surveys 2017 #> 2               5         ABMI          ABMI Amphibian Monitoring 2020 #> 3               5         ABMI Before-After Dose Response Project 2021 #> 4               5         ABMI Before-After Dose Response Project 2022 #> 5               5         ABMI                               Big Grids #> 6               5         ABMI                         BirdNET Example #>   project_id sensor tasks                      status #> 1         42    ARU   309 Published - Map+Report Only #> 2        382    ARU  1528 Published - Map+Report Only #> 3        686    ARU  1873 Published - Map+Report Only #> 4       1174    ARU  1014 Published - Map+Report Only #> 5        381    ARU  2226 Published - Map+Report Only #> 6       2349    ARU     1 Published - Map+Report Only # Download the project report my_report <- wt_download_report(project_id = 620, sensor_id = 'ARU', reports = \"main\", weather_cols = F) %>%   tibble::as_tibble() head(my_report) #> # A tibble: 6 × 31 #>   organization project_id location  location_id location_buffer_m longitude #>   <chr>             <dbl> <chr>           <dbl> <lgl>                 <dbl> #> 1 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 2 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 3 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 4 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 5 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 6 BU                  620 CHPP-WP-1       94515 NA                    -110. #> # ℹ 25 more variables: latitude <dbl>, equipment_make <lgl>, #> #   equipment_model <lgl>, recording_id <dbl>, recording_date_time <dttm>, #> #   task_id <dbl>, aru_task_status <chr>, task_duration <dbl>, #> #   task_method <chr>, species_code <chr>, species_common_name <chr>, #> #   species_scientific_name <chr>, individual_order <dbl>, tag_id <dbl>, #> #   individual_count <chr>, vocalization <chr>, detection_time <dbl>, #> #   tag_duration <dbl>, rms_peak_dbfs <dbl>, tag_is_verified <lgl>, … # Download all of the published Ecosystem Health ARU data to a single object wt_get_download_summary(sensor_id = \"ARU\") %>%   tibble::as_tibble() %>%   dplyr::filter(grepl('^Ecosystem Health',project)) %>%   dplyr::mutate(data = purrr::map(.x = project_id, .f = ~wt_download_report(project_id = .x, sensor_id = \"ARU\", weather_cols = F, reports = \"main\"))) # Download the WildTrax species table spp_table <- wt_get_species() spp_table |> arrange(species_code) #> # A tibble: 5,114 × 6 #>    species_id species_code species_common_name       species_class species_order #>         <dbl> <chr>        <chr>                     <chr>         <chr>         #>  1       2780 10           Wolves, Coyotes and Alli… MAMMALIA      Carnivora     #>  2       2705 100          Barren-ground Caribou     MAMMALIA      Artiodactyla  #>  3       2738 105          Porcupine Caribou         MAMMALIA      Artiodactyla  #>  4       2735 106          Peary Caribou             MAMMALIA      Artiodactyla  #>  5       2750 107          Varying Lemming           MAMMALIA      Rodentia      #>  6       2618 108          Bird                      AVES          NA            #>  7       2616 109          Bear                      MAMMALIA      Carnivora     #>  8       2694 110          Train                     NONE          NA            #>  9       2728 114          Kermode Bear              MAMMALIA      Carnivora     #> 10       2819 129          Opossum                   MAMMALIA      Didelphimorp… #> # ℹ 5,104 more rows #> # ℹ 1 more variable: species_scientific_name <chr> # As ARU format my_report #> # A tibble: 388 × 31 #>    organization project_id location  location_id location_buffer_m longitude #>    <chr>             <dbl> <chr>           <dbl> <lgl>                 <dbl> #>  1 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  2 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  3 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  4 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  5 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  6 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  7 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  8 BU                  620 CHPP-WP-1       94515 NA                    -110. #>  9 BU                  620 CHPP-WP-1       94515 NA                    -110. #> 10 BU                  620 CHPP-WP-1       94515 NA                    -110. #> # ℹ 378 more rows #> # ℹ 25 more variables: latitude <dbl>, equipment_make <lgl>, #> #   equipment_model <lgl>, recording_id <dbl>, recording_date_time <dttm>, #> #   task_id <dbl>, aru_task_status <chr>, task_duration <dbl>, #> #   task_method <chr>, species_code <chr>, species_common_name <chr>, #> #   species_scientific_name <chr>, individual_order <dbl>, tag_id <dbl>, #> #   individual_count <chr>, vocalization <chr>, detection_time <dbl>, … # As point count format head(aru_as_pc) #> # A tibble: 6 × 23 #>   organization project         project_id location location_id location_buffer_m #>   <chr>        <chr>                <dbl> <chr>          <dbl> <lgl>             #> 1 BU           Community - Co…        620 CHPP-WP…       94517 NA                #> 2 BU           Community - Co…        620 CHPP-WP…       94518 NA                #> 3 BU           Community - Co…        620 CHPP-WP…       89972 NA                #> 4 BU           Community - Co…        620 CHPP-WP…       89972 NA                #> 5 BU           Community - Co…        620 CHPP-WP…       89972 NA                #> 6 BU           Community - Co…        620 CHPP-WP…       89972 NA                #> # ℹ 17 more variables: latitude <dbl>, longitude <dbl>, survey_id <chr>, #> #   survey_date <dttm>, survey_url <chr>, observer <chr>, #> #   survey_distance_method <chr>, survey_duration_method <chr>, #> #   detection_distance <chr>, detection_time <chr>, species_code <chr>, #> #   species_common_name <chr>, species_scientific_name <chr>, #> #   individual_count <chr>, detection_heard <lgl>, detection_seen <lgl>, #> #   detection_comments <chr>"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/apis.html","id":"data-discover","dir":"Articles","previous_headings":"","what":"Data Discover","title":"APIs","text":"Explore species data within WildTrax’s Data Discover employing wt_dd_summary() function. Access portion data, even without user privileges. Utilize wt_auth() uncover data pertinent account publicly available WildTrax. Use custom bounding areas:","code":"discover <- wt_dd_summary(sensor = \"ARU\", species = \"White-throated Sparrow\", boundary = NULL) head(discover) #> [[1]] #> # A tibble: 11 × 5 #>    projectId project_name       count species_common_name species_scientific_n…¹ #>        <int> <chr>              <dbl> <chr>               <chr>                  #>  1       686 \"ABMI-Before-Afte…   152 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  2        41 \"BU-Boreal Wetlan…   297 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  3        32 \"BU-Big Grid Pilo…    90 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  4        31 \"BU-Big Grids\"       794 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  5       334 \"BU-General-Commu…    57 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  6        99 \"BU-Old Growth Fo…   222 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  7        84 \"BU-Community tag…    50 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  8        19 \"ABMI-Ecosystem H…    63 White-throated Spa… ZONOTRICHIA ALBICOLLIS #>  9        34 \"ABMI-Ecosystem H…    80 White-throated Spa… ZONOTRICHIA ALBICOLLIS #> 10         1 \"ABMI-Ecosystem H…    51 White-throated Spa… ZONOTRICHIA ALBICOLLIS #> 11        NA \"\"                   158 White-throated Spa… ZONOTRICHIA ALBICOLLIS #> # ℹ abbreviated name: ¹​species_scientific_name #>  #> [[2]] #> # A tibble: 1,812 × 4 #>    species_common_name    count longitude latitude #>    <chr>                  <int>     <dbl>    <dbl> #>  1 White-throated Sparrow     1     -113.     53.8 #>  2 White-throated Sparrow     1     -113.     54.8 #>  3 White-throated Sparrow     1     -113.     54.2 #>  4 White-throated Sparrow     4     -113.     54.7 #>  5 White-throated Sparrow     4     -113.     54.7 #>  6 White-throated Sparrow     1     -113.     54.8 #>  7 White-throated Sparrow     4     -113.     55.0 #>  8 White-throated Sparrow     1     -113.     55.1 #>  9 White-throated Sparrow     1     -113.     55.1 #> 10 White-throated Sparrow     1     -113.     55.1 #> # ℹ 1,802 more rows # Define a polygon my_aoi <- list(c(-113.96067733931979, 56.238173020067734),             c(-117.06284589142298, 54.87576824970637),             c(-112.88035197161919, 54.90431032422126),             c(-113.96067733931979, 56.238173020067734))  discover <- wt_dd_summary(sensor = \"ARU\", species = \"White-throated Sparrow\", boundary = my_aoi)  head(discover) library(sf) # Alberta bounding box abbox <- read_sf(\"...shp\") |> # Shapefile of Alberta   filter(Province == \"Alberta\") |>   st_transform(crs = 4326) |>    st_bbox()  discover <- wt_dd_summary(sensor = \"ARU\", species = \"White-throated Sparrow\", boundary = abbox)  head(discover)"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"audio-data-management","dir":"Articles","previous_headings":"","what":"Audio data management","title":"Audio data concepts","text":"Autonomous recording units (ARUs) remote cameras collect data environment means capturing acoustic visual signals, respectively. ARUs used survey variety species birds, amphibians, bats, since taxa give reliable, identifiable signals. signals produced activities, , territory defense mating. Environmental sensors designed record sound images autonomously long periods time, can accrue large amount data.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"audio-file-formats","dir":"Articles","previous_headings":"Audio data management","what":"Audio file formats","title":"Audio data concepts","text":"three major audio file types used within wildrtrax: wac, flac wav wac proprietary, lossless compressed file format developed Wildlife Acoustics wav standard, ubiquitous uncompressed audio file format flac lossless compressed format might also working mp3 lossy compressed audio file format. can access objects wave_t $ normal list. header = FALSE reading entire wav file, can access slots S4 object using @.","code":"file <- fs::dir_ls(path = \".\", regexp = \"*.wav\")  wave_t <- tuneR::readWave(file, header = T) #True header format  wave_f <- tuneR::readWave(file, header = F)  list(wave_t, wave_f) sound_length_S4 <- round((wave_f@left / wave_f@samp.rate), 2)  #Is equivalent to: sound_length_list <- wave_t$samples / wave_t$sample.rate  sound_length_list"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"spectrograms","dir":"Articles","previous_headings":"Audio data management","what":"Spectrograms","title":"Audio data concepts","text":"spectrogram visual representation spectrum frequencies audio signal varies time (Wikipedia). Fast-Fourier Transform converts waveform spectrogram. Spectrograms can used identify wildlife signals unique spectral signature. Generally speaking, three pieces information can use identifying signal spectrogram: Length time (e.g. seconds, minutes) signal via x-axis Frequency range signal via y-axis Hz (hertz) Relative amplitude signal via z-axis dBFS (decibels relative full scale) maximum frequency spectrogram always sample rate / 2, also called Nyquist Frequency. Let’s create spectrogram get better look audio files. ’s one way using ggspectro seewave. SoX also powerful command line tool can build spectrograms well. Processing time much faster given R doesn’t read file S4 wave object. later.","code":"#Plot a spectrogram v <- seewave::ggspectro(tuneR::readWave(file, from = 0, to = 60, units = \"seconds\"), ovlp = 50) + ggplot2::geom_tile(aes(fill=amplitude)) + theme_bw() #Or try a bash command using SoX  #cd /path/to/file && for file in *.wav; do outfile=\"${file%.*}.png\"; title_in_pic=\"${file%.*}\"; sox \"$file\" -n spectrogram -l -m -t \"$title_in_pic\" -o \"$outfile\"; done"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"from-the-field-to-the-office","dir":"Articles","previous_headings":"Audio data management","what":"From the field to the office","title":"Audio data concepts","text":"Familiarity processes, protocols, equipment data important first step understanding manage environmental sensor data. Check study design monitoring plan ensure correctly managing data prior heading field. wildrtrax doesn’t focus field components data flows heavily dependent . Acoustic data certain metadata dependencies can extracted raw data. robust field visit metadata important support quality control process media.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"metadata-dependencies-for-acoustic-data","dir":"Articles","previous_headings":"Audio data management","what":"Metadata dependencies for acoustic data","title":"Audio data concepts","text":"wildrtrax prefers file name string data deriving composed two parts: spatial component temporal component. call fields location recording_date_time audio respectively. location, date time critical pieces information collected checked visiting environmental sensors field.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/audio-data-concepts.html","id":"data-volume-storage-and-computing-power","dir":"Articles","previous_headings":"Audio data management","what":"Data volume, storage and computing power","title":"Audio data concepts","text":"Collecting lots data environmental sensors easy. ways can reduce collect process? community analysis require broad spectrum range record analyze data collected account imperfect detection. Whereas single multi-species approach, may need look narrow frequency range order detect species. know frequency range species vocalizes , may able change sampling rate, apply band-pass filter compress data methods inherently reduce data quality favour also reducing data volume. complex acoustic information comes larger files.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/camera-data-wrangling.html","id":"summarise-your-camera-data","dir":"Articles","previous_headings":"","what":"Summarise your camera data","title":"Camera data wrangling","text":"wt_summarise_cam() can get: output wt_ind_detect() (e.g. object eh14_detections) raw data (e.g. object eh14_raw) time interval ’re interested (e.g. weekly) variable ’re interested (e.g. detections, presence/absence) desired output format (‘wide’ ‘long’)","code":"# A call to `wt_summarise_cam()`:  eh14_summarised <- wt_summarise_cam(   # Supply your detection data   detect_data = eh14_detections,   # Supply your raw image data   raw_data = eh14_raw,   # Now specify the time interval you're interested in    time_interval = \"week\",   # What variable are you interested in?   variable = \"detections\",   # Your desired output format (wide or long)    output_format = \"wide\"  )"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/camera-data-wrangling.html","id":"the-ultimate-pipeline","dir":"Articles","previous_headings":"","what":"The ultimate pipeline","title":"Camera data wrangling","text":"now can get straight science!","code":"library(wildrtrax)  Sys.setenv(WT_USERNAME = \"*****\",            WT_PASSWORD = \"*****\") wt_auth()   projects <- wt_get_download_summary(\"CAM\") %>%   filter(project == \"ABMI Ecosystem Health 2014\") %>%   select(project_id) %>%   pull()  raw_data <- map_dfr(.x = projects,                      .f = ~wt_download_report(.x, \"CAM\", weather_cols = F, reports = \"main\")  summarised <- wt_ind_detect(raw_data, 30, \"minutes\") %>%   wt_summarise_cam(raw_data, \"day\", \"detections\", \"long\")"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"deep-learning-in-acoustic-processing","dir":"Articles","previous_headings":"","what":"Deep learning in acoustic processing","title":"Acoustic classifiers","text":"Recent advances deep learning led development neural network models can classify sounds within acoustic recordings, captured autonomous recording units (ARUs). classifiers can trained detect just single focal species, classify thousands species. process using automated classifiers extract species detections acoustic recordings collectively called “computer listening”. tutorial show access work classifier results recordings WildTrax.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"birdnet","dir":"Articles","previous_headings":"Deep learning in acoustic processing","what":"BirdNET","title":"Acoustic classifiers","text":"BirdNET deep learning classifier developed Cornell Lab Ornithology trained classify 6,000 world’s common bird species, including North American bird species @kahl_2022. model converts audio recordings windows spectrograms outputs probability score species one.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"classifier-performance","dir":"Articles","previous_headings":"Deep learning in acoustic processing","what":"Classifier performance","title":"Acoustic classifiers","text":"Classifier scores can converted species detections setting threshold (e.g., 0.8) consider species present within given spectrogram @wood_2024. False positives can still occur high score thresholds, often verification human observer still necessary. Choosing score threshold depend goals project; however, threshold choice trade-false positives (.e., incorrect classifications) false negatives (.e., missed detections; @priyadarshani_2018, @knight_2017). Choosing high score threshold minimize false positives, also result false negatives. Choosing low score threshold minimize false negatives result many false positives. proportion false positives given score threshold typically measured precision: precision=tptp+fpprecision = \\frac{tp}{tp + fp} proportion false negatives measured recall: recall=tptp+fnrecall = \\frac{tp}{tp + fn} tp number true positives, fp number false positives, fn number false negatives. threshold-agnostic performance classifier typically evaluated area curve (AUC) precision-recall curve. corner precision recall curve can used select score threshold. F-score combination precision recall can also used select score threshold selecting peak value. Fscore=2*precision*recallprecision+recallFscore = \\frac{2 * precision* recall}{precision + recall}","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"birdnet-performance-for-canadian-birds","dir":"Articles","previous_headings":"Deep learning in acoustic processing","what":"BirdNET performance for Canadian birds","title":"Acoustic classifiers","text":"ABMI evaluated BirdNET dataset 623 3-minute recordings. species annotated minute recording top expert listeners groomed false positives negatives. dataset selected include least 10 recordings detections common 203 Canadian bird species. Recordings primarily sourced Alberta Ontario include variation dialect. evaluated BirdNET running using local eBird occurrence data recording comparing results expert dataset pooling total detections across species per minute recording calculate overall precision, recall, F-score. Precision ranged 0.36 score threshold 0.10 0.94 score threshold 0.99 (Figure 1). Recall ranged 0.01 score threshold 0.99 0.36 0.1 F-score similarly low, ranging 0.03 score threshold 0.01 0.36 score threshold 0.99. Neither precision-recall curve plot F-score relative score threshold showed typical concave curve shape, suggesting low score threshold 0.10 best optimize trade-offs precision recall.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"deep-learning-in-wildtrax","dir":"Articles","previous_headings":"","what":"Deep learning in WildTrax","title":"Acoustic classifiers","text":"WildTrax uses BirdNET automatically classify species recordings uploaded projects, classifier run overnight task uploaded. sensitivity set 1.5 reduce probability false positives score threshold set low 0.1 allow users set higher thresholds needed. list species filtered eBird occurrence data week recording, location.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"downloading-the-classifier-reports","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Downloading the classifier reports","title":"Acoustic classifiers","text":"Use wt_download_report(reports = c('main','birdnet')) download BirdNET report main report analysis. ’ll use ABMI Ecosystem Health 2022 dataset example.","code":"library(wildrtrax)  Sys.setenv(WT_USERNAME = 'guest', WT_PASSWORD = 'Apple123') wt_auth()  #This line will take a minute to run while it downloads the data data <- wt_download_report(project_id = 1144,                            sensor_id = \"ARU\",                            reports = c(\"main\", \"birdnet\"),                             weather_cols = FALSE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"evaluating","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Evaluating","title":"Acoustic classifiers","text":"can combine main report BirdNET report evaluate classifier’s performance given dataset. wt_evaluate_classifier() function takes output wt_download_report() joins together calculates precision, recall, F-score requested sequences thresholds. can request metrics minute level recordings processed species per minute method (1SPM). can also exclude species allowed project BirdNET results evaluation. can plot results evaluation get idea BirdNET performing:","code":"eval <- wt_evaluate_classifier(data,                               resolution = \"task\",                               remove_species = TRUE,                               thresholds = c(10, 99))  tail(eval, 5) ## # A tibble: 5 × 4 ##   precision   recall   fscore threshold ##       <dbl>    <dbl>    <dbl>     <dbl> ## 1         1 0.00200  0.00399         95 ## 2         1 0.00150  0.00299         96 ## 3         1 0.000833 0.00166         97 ## 4         1 0.000666 0.00133         98 ## 5         1 0.000333 0.000666        99 plot.p.e <- ggplot(eval) +   geom_line(aes(x=threshold, y=precision), size=1.5) +   xlab(\"Score threshold\") +   ylab(\"Precision\") +   xlim(0,100) +   ylim(0,1) +   theme_bw()  plot.r.e <- ggplot(eval) +   geom_line(aes(x=threshold, y=recall), size=1.5) +   xlab(\"Score threshold\") +   ylab(\"Recall\") +   xlim(0,100) +   ylim(0,1) +   theme_bw()  plot.f.e <- ggplot(eval) +   geom_line(aes(x=threshold, y=fscore), size=1.5) +   xlab(\"Score threshold\") +   ylab(\"F-score\") +   xlim(0,100) +   ylim(0,1) +   theme_bw()  plot.pr.e <- ggplot(eval) +   geom_line(aes(x=recall, y=precision), size=1.5) +   xlab(\"Recall\") +   ylab(\"Precision\") +   xlim(0,1) +   ylim(0,1) +   theme_bw()  library(gridExtra) grid.arrange(plot.p.e, plot.r.e, plot.f.e, plot.pr.e, ncol=2)"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"selecting-and-filtering-a-threshold","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Selecting and filtering a threshold","title":"Acoustic classifiers","text":"can use precision recall values output wt_evaluate_classifier() function select score threshold manually, can use wt_get_threshold() function select highest threshold maximizes F-score. threshold selected, BirdNET report can filtered: Whether ’re human computer, classifiers make mistakes. can select score threshold maximizes F-score. Let’s look precision : precision chosen score threshold approximately round(eval[eval$threshold==threshold_use,]$precision,3) means ~1/3 detections likely still false positives, probably visually verify remove false positives. Given overall recall rate BirdNET < 10% precision values 0.7, detections used caution ecological analyses. detectability perspective, recall rate 10% means detection probability BirdNET 10% human listener.","code":"threshold_use <- wt_get_threshold(eval) |>    print() ## [1] 26 birdnet <- data[[1]]  detections <- birdnet |>   filter(confidence > threshold_use)  head(detections) ## # A tibble: 6 × 16 ##   organization location location_id project       project_id recording_date_time ##   <chr>        <chr>          <dbl> <chr>              <dbl> <dttm>              ## 1 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## 2 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## 3 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## 4 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## 5 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## 6 ABMI         1004-NE       310673 Ecosystem He…       1144 2022-03-31 07:45:00 ## # ℹ 10 more variables: recording_id <dbl>, recording_length <dbl>, ## #   scientific_name <chr>, species_common_name <chr>, species_code <chr>, ## #   start_s <dbl>, end_s <dbl>, confidence <dbl>, ## #   is_species_allowed_in_project <lgl>, version <chr> eval[eval$threshold==threshold_use,] ## # A tibble: 1 × 4 ##   precision recall fscore threshold ##       <dbl>  <dbl>  <dbl>     <dbl> ## 1     0.699  0.196  0.306        26"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"check-for-additional-species-detected","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Check for additional species detected","title":"Acoustic classifiers","text":"One potential valuable applications BirdNET check presence additional species acoustic recordings detected human listeners. @ware_2023 found supplementing human listener data verified computer listening results improved estimates species richness, particularly water-associated birds. can use wt_additional_species() function check species reported BirdNET human listeners detect project. input function output wt_download_report() function request main birdnet reports need set score threshold. Let’s use high threshold (80) example dataset see new species detected. can use resolution argument specify whether want look new species task, recording, location, entire project. Let’s pretend ’re interested site-specific species richness use task argument. unique(new$species_code) potential new species detections dataset. human-generated tags exist project, words using classifiers detect species, additional tags can easily synchronized wt_additional_tags(format_to_tags = TRUE) along output folder. adding additional tags human processed data set, best approach sync tags onto new tasks. Generate tasks ‘Assigned’ observer sync output wt_additional_tags(). common error may encounter either conflicts number individuals assigned relative task method.","code":"new <- wt_additional_species(data, remove_species = TRUE, threshold = 80, resolution=\"task\")  #potential new detections nrow(new) ## [1] 3 table(new$species_code) ##  ## AMWI BOOW EVGR  ##    1    1    1"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"individual-calls","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Individual calls","title":"Acoustic classifiers","text":"Another potential use BirdNET WildTrax use detect individual calls opposed just first call task (1SPT) minute (1SPM). might interest ’re using call rate behavioural analysis, ’re looking detections tool development like distance estimation building focal species recognizer. Let’s try Clay-coloured Sparrow (CCSP): , ’ll probably want upload detections WildTrax verification, even though BirdNET performance Clay-coloured Sparrow pretty good. Let’s take look BirdNET output call rate see ’s higher beginning season, expect:","code":"#Evaluate classifier performance eval_ccsp <- wt_evaluate_classifier(data,                               resolution = \"task\",                               remove_species = TRUE,                               species = \"CCSP\",                               thresholds = c(10, 99))  #Filter the detections to the best threshold threshold_ccsp <- wt_get_threshold(eval_ccsp)  #Look at performance at that threshold eval_ccsp[eval_ccsp$threshold==threshold_ccsp,] ## # A tibble: 1 × 4 ##   precision recall fscore threshold ##       <dbl>  <dbl>  <dbl>     <dbl> ## 1         1  0.446  0.617        25 #Filter to detections detections_ccsp <- data[[1]] |>   filter(species_code == \"CCSP\",           confidence > threshold_ccsp) #Calculate detections per second and mean confidence in each recording rate_ccsp <- detections_ccsp |>    group_by(location_id, recording_date_time, recording_length) |>   summarize(calls = n(),             confidence = mean(confidence),             .groups = \"keep\") |>    ungroup() |>    mutate(rate = calls/recording_length*60,   recording_date_time = as.POSIXct(recording_date_time, format = \"%Y-%m-%d %H:%M:%S\"),   yday = as.numeric(format(recording_date_time, \"%j\")),   hour = as.numeric(format(recording_date_time, \"%H\")))  #Filter to the sites with most recordings with detections occupied_ccsp <- rate_ccsp |>    group_by(location_id) |>    mutate(recordings = n()) |>    ungroup() |>    dplyr::filter(recordings >= 4)  #Plot call rate by day of year ggplot(occupied_ccsp) +    geom_point(aes(x=yday, y=rate)) +   geom_smooth(aes(x=yday, y=rate)) +   xlab(\"Day of year\") +   ylab(\"Rate of Clay-coloured sparrow detections per minute\") +   theme_bw()"},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/classifiers-tutorial.html","id":"other-applications","dir":"Articles","previous_headings":"Deep learning in WildTrax","what":"Other applications","title":"Acoustic classifiers","text":"Visit BirdNET Github repository run BirdNET computer. decision pursue applications made effect BirdNET’s low recall rate mind: presence / absence data, BirdNET unlikely reliably confirm absences due low recall. BirdNET data can used occupancy modelling (@wood_2023), approaches can accommodate false positive error rates preclude verification detections (@rhinehart_2022). However, users keep mind occupancy modelling recommended detection probabilities > 30% recall BirdNET may low reliable occupancy estimates many species (@knight_2017). See @perez-granados_2023 full review BirdNET applications performance.","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"what-is-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"What is wildrtrax?","title":"Introduction","text":"wildrtrax, pronounced ‘wild-R-tracks’, R package ecologists advanced users work environmental sensors autonomous recording units (ARUs) remote cameras. contains functions designed meet needs order organize, analyze standardize data WildTrax infrastructure. wildrtrax self-contained must run R statistical environment, also depends many R packages. wildrtrax free software distributed MIT License (c) 2023.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"what-is-wildtrax","dir":"Articles","previous_headings":"Introduction","what":"What is WildTrax?","title":"Introduction","text":"WildTrax web-enabled portal designed manage, store, process, share discover environmental sensor data biological data extracted media. WildTrax developed Alberta Biodiversity Monitoring Institute Bioacoustic Unit.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"why-did-you-build-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"Why did you build wildrtrax?","title":"Introduction","text":"wildrtrax built parallel WildTrax provide additional analytics functionalities. outlining standardized harmonized procedure data intake, quality control, processing verification environmental sensor data, wildrtrax WildTrax hope provide open workflows using ARUs cameras answer biological questions order inform meaningful conservation decision-making.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"what-r-packages-does-wildrtrax-depend-on","dir":"Articles","previous_headings":"Introduction","what":"What R packages does wildrtrax depend on?","title":"Introduction","text":"wildrtrax depends multitude packages provide flexible routines work flows data management. tidyverse piping functions, standard grammar tidy data manipulation, furrr parallel computing, acoustic analysis packages: bioacoustics, tuneR, seewave. wt_run_ap function associated work flows indebted QUT Ecoacoustics Audio Analysis Software.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"how-do-i-report-a-bug-in-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"How do I report a bug in wildrtrax?","title":"Introduction","text":"think found bug wildrtrax, report developers maintainers. Please send bug reports R mailing lists, since wildrtrax standard R package. preferred forum report bugs GitHub. required order report bug - reporting issues welcomed encouraged way make wildrtrax non-buggy: bug report sufficiently detailed bug can replicated corrected Send example causes bug Send minimal data set available R Paste output error message message Specify version wildrtrax used","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"can-i-contribute-to-wildrtrax","dir":"Articles","previous_headings":"Introduction","what":"Can I contribute to wildrtrax?","title":"Introduction","text":"Yes! wildrtrax dependent user contribution feedback welcome. problems wildrtrax, may simple incomplete documentation. Feature requests also welcome, necessarily fulfilled. new feature added easy looks useful user base package, submit fully annotated code. See information please read Code Conduct.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/introduction.html","id":"disclaimers","dir":"Articles","previous_headings":"Introduction","what":"Disclaimers","title":"Introduction","text":"pronoun “” throughout articles refers reader. “” refers wildrtrax team general.","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/articles/tutorials.html","id":"wildrtrax-1-1-0-public-webinar","dir":"Articles","previous_headings":"Webinars","what":"wildrtrax 1.1.0 Public Webinar","title":"Tutorials","text":"webinar, Alex MacPhail, Marcus Becker Elly Knight, take tour main components package, including authenticating WildTrax directly R, downloading data reports data frames, introduction various functions aid downstream analyses ARU remote camera data.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex MacPhail. Author, maintainer. Marcus Becker. Author. Elly Knight. Author.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"MacPhail , Becker M, Knight E (2024). wildrtrax: Environmental sensor data management analytics WildTrax. R package version 1.3.1, https://abbiodiversity.github.io/wildrtrax/.","code":"@Manual{,   title = {wildrtrax: Environmental sensor data management and analytics to and from WildTrax},   author = {Alex MacPhail and Marcus Becker and Elly Knight},   year = {2024},   note = {R package version 1.3.1},   url = {https://abbiodiversity.github.io/wildrtrax/}, }"},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Environmental sensor data management and analytics to and from WildTrax","text":"wildrtrax (pronounced wild-r-tracks) R package containing functions help manage analyze environmental sensor data. helps simplify entire data life cycle offering tools data pre-processing, wrangling, analysis, facilitating seamless data transfer WildTrax. wildrtrax, users can effortlessly establish end--end workflows ensure reproducibility analyses. providing consistent organized framework, package promotes transparency integrity research, making effortless share replicate results.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Environmental sensor data management and analytics to and from WildTrax","text":"can install recent version wildrtrax directly repository : development version package contains experimental features recent fixes. can installed : development version package periodically merged reflected Changelogs.","code":"# install.packages(\"remotes\") remotes::install_github(\"ABbiodiversity/wildrtrax\") remotes::install_github(\"ABbiodiversity/wildrtrax@development\")"},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Environmental sensor data management and analytics to and from WildTrax","text":"functions begin wt_* prefix. Column names metadata align WildTrax infrastructure. goal follow work flow pre-processing, linking WildTrax, download analysis. ARUs 🔉 Cameras 📷 Point counts 🐦 Bats 🦇 wt_audio_scanner() 🔉 🦇 wt_run_ap() 🔉 wt_glean_ap() 🔉 wt_signal_level() 🔉 wt_chop() 🔉 🦇 wt_make_aru_tasks() 🔉 🦇 wt_songscope_tags() 🔉 wt_kaleidoscope_tags() 🔉 🦇 wt_auth() 📷 🔉 🐦 🦇 wt_get_download_summary() 📷 🔉 🐦 🦇 Available reports: main, project, location, recording, image_set, image, tag, point_count, megadetector, megaclassifer, birdnet, daylight wt_dd_summary() 📷 🔉 🐦 🦇 wt_get_species() 📷 🔉 🐦 🦇 wt_download_media() 🔉 🦇 📷 wt_summarise_cam() 📷 wt_ind_detect() 📷 wt_location_distances() 🔉 📷 🐦 🦇 wt_tidy_species() 🔉 📷 🐦 🦇 wt_replace_tmtt() 🔉 wt_make_wide() 🔉 🐦 🦇 wt_format_occupancy() 🔉 🐦 wt_qpad_offsets() 🔉 🐦 wt_add_grts() 🦇 wt_evaluate_classifier()🔉 wt_get_threshold() 🔉 wt_additional_species() 🔉","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Environmental sensor data management and analytics to and from WildTrax","text":"report bugs, request additional features, get help using package, please file issue.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Environmental sensor data management and analytics to and from WildTrax","text":"encourage ongoing contributions collaborations improve package future. Alberta Biodiversity Monitoring Institute provides ongoing support, development funding.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Environmental sensor data management and analytics to and from WildTrax","text":"R package licensed MIT license©2024 Alberta Biodiversity Monitoring Institute.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Environmental sensor data management and analytics to and from WildTrax","text":"Please note wildrtrax released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-delete_wav_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to delete media — .delete_wav_files","title":"Internal function to delete media — .delete_wav_files","text":"Internal function delete media.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-delete_wav_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to delete media — .delete_wav_files","text":"","code":".delete_wav_files(dir)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-delete_wav_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to delete media — .delete_wav_files","text":"dir Directory containing files","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_off.html","id":null,"dir":"Reference","previous_headings":"","what":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"Functions get offsets.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_off.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"","code":".make_off(spp, x)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_off.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QPAD offsets, wrapped by the wt_qpad_offsets function. — .make_off","text":"spp species offset calculation. x Dataframe .make_x function.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for QPAD offsets — .make_x","title":"Internal function for QPAD offsets — .make_x","text":"Functions format reports qpad offset calculation.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for QPAD offsets — .make_x","text":"","code":".make_x(data, tz = \"local\", check_xy = TRUE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for QPAD offsets — .make_x","text":"data Dataframe output wt_make_wide function. tz Character; whether data local UTC time (\"local\", \"utc\"). Defaults \"local\". check_xy Logical; check whether coordinates within range QPAD offsets valid .","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-make_x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function for QPAD offsets — .make_x","text":"QPAD offsets, wrapped wt_qpad_offsets function.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_api_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"Generic function handle certain POST requests","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_api_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"","code":".wt_api_pr(path, ...)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_api_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An internal function to handle generic POST requests to WildTrax API — .wt_api_pr","text":"path path API ... Argument pass along POST query","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — .wt_auth","title":"Internal functions — .wt_auth","text":"Get Auth0 token assign information hidden environment","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — .wt_auth","text":"","code":".wt_auth()"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions — .wt_auth","text":"WildTrax authentication","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_auth_expired.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to check if Auth0 token has expired — .wt_auth_expired","title":"Internal function to check if Auth0 token has expired — .wt_auth_expired","text":"Check Auth0 token expired","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_auth_expired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to check if Auth0 token has expired — .wt_auth_expired","text":"","code":".wt_auth_expired()"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_calculate_prf.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal evaluation function for acoustic classifiers — .wt_calculate_prf","title":"Internal evaluation function for acoustic classifiers — .wt_calculate_prf","text":"Internal function calculate precision, recall, F-score given score threshold.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_calculate_prf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal evaluation function for acoustic classifiers — .wt_calculate_prf","text":"","code":".wt_calculate_prf(threshold, data, human_total)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_calculate_prf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal evaluation function for acoustic classifiers — .wt_calculate_prf","text":"threshold single numeric value score threshold data Output wt_download_report() function request main birdnet reports human_total total number detections gold standard, typically human listening data (e.g., main report)","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_calculate_prf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal evaluation function for acoustic classifiers — .wt_calculate_prf","text":"vector precision, recall, F-score, threshold","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Column assignments — .wt_col_types","title":"Column assignments — .wt_col_types","text":"Assign correct column types reports","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/dot-wt_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column assignments — .wt_col_types","text":"","code":".wt_col_types(data)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wildRtrax.html","id":null,"dir":"Reference","previous_headings":"","what":"wildrtrax: A series of functions for environmental sensor data management and analysis to and from WildTrax — wildrtrax","title":"wildrtrax: A series of functions for environmental sensor data management and analysis to and from WildTrax — wildrtrax","text":"wildrtrax R package enables environmental sensor users create comprehensive work flows managing analyzing data.","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wildRtrax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wildrtrax: A series of functions for environmental sensor data management and analysis to and from WildTrax — wildrtrax","text":"Alex MacPhail agmacpha@ualberta.ca","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_add_grts.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect locations to add a GRTS ID — wt_add_grts","title":"Intersect locations to add a GRTS ID — wt_add_grts","text":"function intersects location data GRTS ID provided NABat","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_add_grts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect locations to add a GRTS ID — wt_add_grts","text":"","code":"wt_add_grts(data, group_locations_in_cell = FALSE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_add_grts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersect locations to add a GRTS ID — wt_add_grts","text":"data Data containing locations group_locations_in_cell Option provide distinct location names points found cell. Sequentially provides number GRTS ID e.g. 3-1, 3-2, etc.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_add_grts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersect locations to add a GRTS ID — wt_add_grts","text":"dataframe additional GRTS IDs","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_add_grts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersect locations to add a GRTS ID — wt_add_grts","text":"","code":"if (FALSE) { # \\dontrun{  dat.grts <- wt_download_report(reports = \"location\") grts.data <- wt_add_grts(dat.grts) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_additional_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Find additional species — wt_additional_species","title":"Find additional species — wt_additional_species","text":"Check species reported BirdNET human listeners detect project.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_additional_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find additional species — wt_additional_species","text":"","code":"wt_additional_species(   data,   remove_species = TRUE,   threshold = 50,   resolution = \"task\",   format_to_tags = FALSE,   output = NULL )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_additional_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find additional species — wt_additional_species","text":"data Output wt_download_report() function request main birdnet reports remove_species Logical; indicates whether species allowed WildTrax project removed BirdNET report threshold Numeric; desired score threshold resolution Character; either \"recording\" identify new species recording \"location\" identify new species location format_to_tags Logical; TRUE, creates formatted output turn detections tags uploading WildTrax output Character; valid directory entered, exports additional detections tags sync WildTrax project","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_additional_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find additional species — wt_additional_species","text":"tibble fields birdnet report highest scoring detection new species detection recording.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_additional_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find additional species — wt_additional_species","text":"","code":"if (FALSE) { # \\dontrun{ data <- wt_download_report(project_id = 1144, sensor_id = \"ARU\", reports = c(\"main\", \"birdnet\"), weather_cols = FALSE)  new <- wt_additional_species(data, remove_species = TRUE, threshold = 80, resolution=\"location\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_audio_scanner.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan acoustic data to a standard format — wt_audio_scanner","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"Scans directories audio data returns standard naming conventions","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_audio_scanner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"","code":"wt_audio_scanner(path, file_type, extra_cols = F)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_audio_scanner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"path Character; path directory audio files wish scan. Can done recursively. file_type Character; Takes one four values: wav, wac, flac . Use \"\" directory contains many types files. extra_cols Boolean; Default set FALSE speed. TRUE, returns additional columns file duration, sample rate number channels.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_audio_scanner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"tibble summary audio files.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_audio_scanner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scan acoustic data to a standard format — wt_audio_scanner","text":"","code":"if (FALSE) { # \\dontrun{ wt_audio_scanner(path = \".\", file_type = \"wav\", extra_cols = T) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate into WildTrax — wt_auth","title":"Authenticate into WildTrax — wt_auth","text":"Obtain Auth0 credentials using WT_USERNAME WT_PASSWORD stored environment variables","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate into WildTrax — wt_auth","text":"","code":"wt_auth(force = FALSE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate into WildTrax — wt_auth","text":"force Logical; whether force re-authentication even token expired. Defaults FALSE.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate into WildTrax — wt_auth","text":"","code":"if (FALSE) { # \\dontrun{ # Authenticate first: wt_auth(force = FALSE) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_chop.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment large audio files — wt_chop","title":"Segment large audio files — wt_chop","text":"\"Chops\" wav files many smaller files desired duration writes output folder.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_chop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment large audio files — wt_chop","text":"","code":"wt_chop(input = NULL, segment_length = NULL, output_folder = NULL)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_chop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment large audio files — wt_chop","text":"input data frame tibble containing information audio files segment_length Numeric; Segment length seconds. Modulo recording exported trailing time left depending segment length used output_folder Character; output path segments stored","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_chop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segment large audio files — wt_chop","text":"return value, called file-writing side effects.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_chop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segment large audio files — wt_chop","text":"","code":"if (FALSE) { # \\dontrun{ wt_chop(input = my_files, segment_length = 60, output_folder = \"output_folder\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_dd_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from Data Discover — wt_dd_summary","title":"Download data from Data Discover — wt_dd_summary","text":"Download Data Discover results projects across WildTrax","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_dd_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from Data Discover — wt_dd_summary","text":"","code":"wt_dd_summary(sensor = c(\"ARU\", \"CAM\", \"PC\"), species = NULL, boundary = NULL)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_dd_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from Data Discover — wt_dd_summary","text":"sensor sensor wish query either 'ARU', 'CAM' 'PC' species species want search (e.g. 'WTSP'). Multiple species can included. boundary custom boundary want use. Defined least four vertex polygon. Definition can also bbox","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_dd_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from Data Discover — wt_dd_summary","text":"Return","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_dd_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from Data Discover — wt_dd_summary","text":"","code":"if (FALSE) { # \\dontrun{  aoi <- list( c(-110.85438, 57.13472), c(-114.14364, 54.74858), c(-110.69368, 52.34150), c(-110.854385, 57.13472) )  dd <- wt_dd_summary(sensor = 'ARU', species = 'White-throated Sparrow', boundary = aoi) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Download media — wt_download_media","title":"Download media — wt_download_media","text":"Download acoustic image media batch. Includes download tag clips spectrograms ARU sensor.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download media — wt_download_media","text":"","code":"wt_download_media(   input,   output,   type = c(\"recording\", \"image\", \"tag_clip_audio\", \"tag_clip_spectrogram\") )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download media — wt_download_media","text":"input report data output output folder type Either recording, image, tag_clip_spectrogram, tag_clip_audio","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download media — wt_download_media","text":"organized folder media. Assigning wt_download_tags object return table form data functions returning effects output directory","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download media — wt_download_media","text":"","code":"if (FALSE) { # \\dontrun{ dat.report <- wt_download_report() |> wt_download_media(output = \"my/output/folder\", type = \"recording\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Download formatted reports from WildTrax — wt_download_report","title":"Download formatted reports from WildTrax — wt_download_report","text":"Download various ARU, camera, point count data projects across WildTrax","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download formatted reports from WildTrax — wt_download_report","text":"","code":"wt_download_report(project_id, sensor_id, reports, weather_cols = TRUE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download formatted reports from WildTrax — wt_download_report","text":"project_id Numeric; project ID number like download data . Use wt_get_download_summary() retrieve IDs. sensor_id Character; Can either \"ARU\", \"CAM\", \"PC\". reports Character; report type returned. Multiple values accepted concatenated string. weather_cols Logical; want include weather information stations? Defaults TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download formatted reports from WildTrax — wt_download_report","text":"multiple report types requested, list object returned; one, dataframe.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download formatted reports from WildTrax — wt_download_report","text":"Valid values argument report sensor_id = \"CAM\" currently : main project location image_report image_set tag megadetector megaclassifier definitions Valid values argument report sensor_id = \"ARU\" currently : main project location recording tag birdnet definitions Valid values argument report sensor_id = \"PC\" currently : main project location point_count definitions","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_download_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download formatted reports from WildTrax — wt_download_report","text":"","code":"if (FALSE) { # \\dontrun{ # Authenticate first: wt_auth() a_camera_project <- wt_download_report( project_id = 397, sensor_id = \"CAM\", reports = c(\"tag\", \"image_set\"), weather_cols = TRUE)  an_aru_project <- wt_download_report( project_id = 47, sensor_id = \"ARU\", reports = c(\"main\", \"birdnet\"), weather_cols = TRUE) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_evaluate_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a classifier — wt_evaluate_classifier","title":"Evaluate a classifier — wt_evaluate_classifier","text":"Calculates precision, recall, F-score BirdNET requested sequence thresholds. can request metrics minute level recordings processed species per minute method (1SPM). can also exclude species allowed project BirdNET results evaluation.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_evaluate_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a classifier — wt_evaluate_classifier","text":"","code":"wt_evaluate_classifier(   data,   resolution = \"recording\",   remove_species = TRUE,   species = NULL,   thresholds = c(10, 99) )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_evaluate_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a classifier — wt_evaluate_classifier","text":"data Output wt_download_report() function request main birdnet reports resolution Character; either \"recording\" summarize entire recording level \"minute\" summarize minute level task_method \"1SPM\", \"task\" remove_species Logical; indicates whether species allowed WildTrax project removed BirdNET report species Character; optional subset species calculate metrics (e.g., species = c(\"OVEN\", \"OSFL\", \"BOCH\")) thresholds Numeric; start end sequence score thresholds calculate performance metrics","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_evaluate_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a classifier — wt_evaluate_classifier","text":"tibble containing columns precision, recall, F-score requested thresholds.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_evaluate_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a classifier — wt_evaluate_classifier","text":"","code":"if (FALSE) { # \\dontrun{ data <- wt_download_report(project_id = 1144, sensor_id = \"ARU\", reports = c(\"main\", \"birdnet\"), weather_cols = FALSE)  eval <- wt_evaluate_classifier(data, resolution = \"recording\", remove_species = TRUE, thresholds = c(10, 99)) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_flac_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant metadata from a flac file — wt_flac_info","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"Scrape relevant information flac file","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_flac_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"","code":"wt_flac_info(path)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_flac_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"path Character; flac file path","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_flac_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant metadata from a flac file — wt_flac_info","text":"list relevant information","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data for a specified portal — wt_format_data","title":"Format data for a specified portal — wt_format_data","text":"function takes WildTrax reports converts desired format","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data for a specified portal — wt_format_data","text":"","code":"wt_format_data(input, format = c(\"FWMIS\", \"NABAT\"))"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data for a specified portal — wt_format_data","text":"input report containing locations wt_download_report() format format .e. 'FWMIS' 'NABAT'","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format data for a specified portal — wt_format_data","text":"tibble formatted report","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format data for a specified portal — wt_format_data","text":"","code":"if (FALSE) { # \\dontrun{  dat <- wt_download_report(reports = c(\"main\",\"visit\",\"equipment\")) |> wt_format_data(format = 'FWMIS') } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_occupancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Format WildTrax report for occupancy modelling — wt_format_occupancy","title":"Format WildTrax report for occupancy modelling — wt_format_occupancy","text":"function formats summary report wt_download_report() function unmarked object occupancy modelling. current version includes formatting ARU sensor single species single season models.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_occupancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format WildTrax report for occupancy modelling — wt_format_occupancy","text":"","code":"wt_format_occupancy(data, species, siteCovs = NULL)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_occupancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format WildTrax report for occupancy modelling — wt_format_occupancy","text":"data Summary report WildTrax observations wt_download_report() function. Currently functioning ARU sensor. species Character; four-letter alpha code species desired occupancy modelling. siteCovs Optional dataframe site covariates. Must contain column values location field data, one row per unique value location (.e., one row per site).","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_occupancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format WildTrax report for occupancy modelling — wt_format_occupancy","text":"object class unmarkedFrameOccu. See ?unmarked::unmarkedFrameOccu details.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_format_occupancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format WildTrax report for occupancy modelling — wt_format_occupancy","text":"","code":"if (FALSE) { # \\dontrun{ dat.occu <- wt_format_occupancy(dat, species=\"CONI\", siteCovs=NULL) mod <- occu(~ 1 ~ 1, dat.occu) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_download_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a download summary from WildTrax — wt_get_download_summary","title":"Get a download summary from WildTrax — wt_get_download_summary","text":"Obtain table listing projects user able download data ","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_download_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a download summary from WildTrax — wt_get_download_summary","text":"","code":"wt_get_download_summary(sensor_id)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_download_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a download summary from WildTrax — wt_get_download_summary","text":"sensor_id Can one \"ARU\", \"CAM\", \"PC\"","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_download_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a download summary from WildTrax — wt_get_download_summary","text":"dataframe listing projects user can download data , including: project name, id, year, number tasks, geographic bounding box project status.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_download_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a download summary from WildTrax — wt_get_download_summary","text":"","code":"if (FALSE) { # \\dontrun{ # Authenticate first: wt_auth() wt_get_download_summary(sensor_id = \"ARU\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the WildTrax species table — wt_get_species","title":"Get the WildTrax species table — wt_get_species","text":"Request WildTrax species table","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the WildTrax species table — wt_get_species","text":"","code":"wt_get_species()"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the WildTrax species table — wt_get_species","text":"tibble WildTrax species table","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the WildTrax species table — wt_get_species","text":"","code":"if (FALSE) { # \\dontrun{  wt_species <- wt_get_species()  } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify optimal threshold — wt_get_threshold","title":"Identify optimal threshold — wt_get_threshold","text":"Retrieves score threshold maximizes F-score, tradeoff precision recall.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify optimal threshold — wt_get_threshold","text":"","code":"wt_get_threshold(data)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify optimal threshold — wt_get_threshold","text":"data Tibble output wt_evaluate_classifier() function.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify optimal threshold — wt_get_threshold","text":"single numeric value","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_get_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify optimal threshold — wt_get_threshold","text":"","code":"if (FALSE) { # \\dontrun{ data <- wt_download_report(project_id = 1144, sensor_id = \"ARU\", reports = c(\"main\", \"birdnet\"), weather_cols = FALSE)  eval <- wt_evaluate_classifier(data, resolution = \"recording\", remove_species = TRUE, thresholds = c(10, 99))  threshold_use <- wt_get_threshold(eval) |> print() } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_glean_ap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"function use list media files wt_* work flow outputs wt_run_ap() order generate summary plots acoustic indices long-duration false-colour spectrograms. can viewed \"final step\" interpreting acoustic index LDFC values recordings.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_glean_ap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"","code":"wt_glean_ap(   x = NULL,   input_dir,   purpose = c(\"quality\", \"abiotic\", \"biotic\"),   include_ind = TRUE,   include_ldfcs = TRUE )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_glean_ap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"x data frame tibble; must contain file name. Use output `wt_audio_scanner()`. input_dir Character; folder path outputs `wt_run_ap()` stored. purpose Character; type filtering can choose include_ind Logical; Include index results include_ldfcs Logical; Include LDFC results","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_glean_ap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"Output return merged tibble information, summary plots indices LDFC","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_glean_ap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and plot relevant acoustic index metadata and LDFCs — wt_glean_ap","text":"","code":"if (FALSE) { # \\dontrun{ wt_glean_ap(x = wt_audio_scanner_data, input_dir = \"/path/to/my/files\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_ind_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate independent camera detections — wt_ind_detect","title":"Evaluate independent camera detections — wt_ind_detect","text":"Create independent detections dataframe using camera data WildTrax","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_ind_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate independent camera detections — wt_ind_detect","text":"","code":"wt_ind_detect(   x,   threshold,   units = \"minutes\",   datetime_col = image_date_time,   remove_human = TRUE,   remove_domestic = TRUE )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_ind_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate independent camera detections — wt_ind_detect","text":"x dataframe camera data; preferably, main report wt_download_report(). threshold Numeric; time interval parse independent detections. units threshold unit. Can one three values, \"seconds\", \"minutes\", \"hours\". datetime_col Defaults image_date_time; column indicating timestamp image. remove_human Logical; human human-related tags (e.g. vehicles) removed? Defaults TRUE. remove_domestic Logical; domestic animal tags (e.g. cows) removed? Defaults TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_ind_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate independent camera detections — wt_ind_detect","text":"dataframe independent detections camera data, based threshold specified. df include information duration detection, number images, average number individual animals per image, max number animals detection.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_ind_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate independent camera detections — wt_ind_detect","text":"","code":"if (FALSE) { # \\dontrun{ detections <- wt_ind_detect(x = df, threshold = 30, units = \"minutes\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_kaleidoscope_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","title":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","text":"wt_kaleidoscope_tags Takes classifier output Wildlife Acoustics Kaleidoscope converts WildTrax tag template upload","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_kaleidoscope_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","text":"","code":"wt_kaleidoscope_tags(input, output, freq_bump = T)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_kaleidoscope_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","text":"input Character; path input csv output Character; Path output file stored freq_bump Boolean; Set TRUE add buffer frequency values exported Kaleidoscope. Helpful getting context around signal species verification","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_kaleidoscope_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","text":"csv formatted WildTrax tag template","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_kaleidoscope_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Kaleidoscope output to tags — wt_kaleidoscope_tags","text":"","code":"if (FALSE) { # \\dontrun{ wt_kaleidoscope_tags(input = input.csv, output = tags.csv, freq_bump = T) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_location_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"General convenience functions — wt_location_distances","title":"General convenience functions — wt_location_distances","text":"Takes input latitude longitudes computes distances set valid points","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_location_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General convenience functions — wt_location_distances","text":"","code":"wt_location_distances(input_from_tibble = NULL, input_from_file = NULL)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_location_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General convenience functions — wt_location_distances","text":"input_from_tibble Use tibble constructed distinct list location names, latitude longitude input_from_file Use file downloaded either organization project","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_location_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General convenience functions — wt_location_distances","text":"three-column tibble distances location","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_location_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General convenience functions — wt_location_distances","text":"","code":"if (FALSE) { # \\dontrun{ df <- wt_location_distances(input = my_location_tibble, input_from_file) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Linking media to WildTrax — wt_make_aru_tasks","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"wt_make_aru_tasks() uses wt_audio_scanner() input tibble create task template upload WildTrax project.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"","code":"wt_make_aru_tasks(   input,   output = NULL,   task_method = c(\"1SPM\", \"1SPT\", \"None\"),   task_length )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"input Character; input wt_audio_scanner() tibble. wt_audio_scanner() tibble, data must contain minimum location, recording_date_time file_path columns. output Character; Path output task csv file stored task_method Character; Method type task. Options 1SPM, 1SPT None. See Methods(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) WildTrax details. task_length Numeric; Task length seconds. Must 1 - 1800 can two decimal places.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"csv formatted WildTrax task template important media uploaded WildTrax, first trying generate tasks project. parallel, can select files want upload generate tasks project.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"Prepare media data upload WildTrax following suite functions help wrangle media data together order upload WildTrax. can make tasks(https://www.wildtrax.ca/home/resources/guide/projects/aru-projects.html) tags(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) using results wt_audio_scanner() tibble hits one two Wildlife Acoustics programs Songscope() Kaleidoscpe(). Creating tasks media","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"wt-make-aru-tasks","dir":"Reference","previous_headings":"","what":"wt_make_aru_tasks","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"NA","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_aru_tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linking media to WildTrax — wt_make_aru_tasks","text":"","code":"if (FALSE) { # \\dontrun{ wt_make_tasks(input = my_audio_tibble, output = tasks.csv, task_method = \"1SPT\", task_length = 180) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a wide survey by species dataframe — wt_make_wide","title":"Convert to a wide survey by species dataframe — wt_make_wide","text":"function converts long-formatted report wide survey species dataframe abundance values.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a wide survey by species dataframe — wt_make_wide","text":"","code":"wt_make_wide(data, sound = \"all\")"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a wide survey by species dataframe — wt_make_wide","text":"data WildTrax main report tag report wt_download_report() function. sound Character; vocalization type(s) retain (\"\", \"Song\", \"Call\", \"Non-vocal\"). Can used remove certain types detections. Defaults \"\" (.e., filtering).","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a wide survey by species dataframe — wt_make_wide","text":"dataframe identical input observations specified groups removed.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_make_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a wide survey by species dataframe — wt_make_wide","text":"","code":"if (FALSE) { # \\dontrun{ dat.tidy <- wt_tidy_species(dat) dat.tmtt <- wt_replace_tmtt(dat.tidy) dat.wide <- wt_make_wide(dat.tmtt, sound=\"all\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QPAD offsets — wt_qpad_offsets","title":"Get QPAD offsets — wt_qpad_offsets","text":"function calculates statistical offsets account survey-specific species-specific variation availability detection perceptibility birds. function requires download QPAD R package used output wt_make_wide() function","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QPAD offsets — wt_qpad_offsets","text":"","code":"wt_qpad_offsets(data, species = c(\"all\"), version = 3, together = FALSE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QPAD offsets — wt_qpad_offsets","text":"data Dataframe output wt_make_wide() function. species Character; species offset calculation. Can list 4-letter AOU codes (e.g., c(\"TEWA\", \"OSFL\", \"OVEN\")) \"\" calculate offsets every species input dataframe offsets available. Defaults \"\". version Numeric; version QPAD offsets use (2, 3). Defaults 3. together Logical; whether offsets bound input dataframe returned separate object.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QPAD offsets — wt_qpad_offsets","text":"dataframe containing QPAD values either original wide data together = TRUE","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get QPAD offsets — wt_qpad_offsets","text":"Solymos et al. 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047-1058.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_qpad_offsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get QPAD offsets — wt_qpad_offsets","text":"","code":"if (FALSE) { # \\dontrun{ devtools::install_github(\"borealbirds/QPAD\")  dat.clean <- wt_tidy_species(dat) dat.tmtt <- wt_replace_tmtt(dat.clean) dat.wide <- wt_make_wide(dat.tmtt, sound=\"all\") dat.qpad <- wt_qpad_offsets(dat.wide, species=\"all\", version=3, together = TRUE) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_replace_tmtt.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","title":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","text":"function uses lookup table model-predicted values replace 'TMTT' entries listener-processed ARU data WildTrax. model-predicted values produced using estimated abundances 'TMTT' entries mixed effects model Poisson distribution random effects species observer.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_replace_tmtt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","text":"","code":"wt_replace_tmtt(data, calc = \"round\")"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_replace_tmtt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","text":"data Dataframe WildTrax observations, example summary report. calc Character; method convert model predictions integer (\"round\", \"ceiling\", \"floor\"). See ?round() details.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_replace_tmtt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","text":"dataframe identical input 'TMTT' entries abundance column replaced integer values.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_replace_tmtt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace 'TMTT' abundance with model-predicted values — wt_replace_tmtt","text":"","code":"if (FALSE) { # \\dontrun{ dat.tmtt <- wt_replace_tmtt(dat, calc=\"round\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_run_ap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get acoustic index values from audio — wt_run_ap","title":"Get acoustic index values from audio — wt_run_ap","text":"generating acoustic indices false-colour spectrograms using QUT Ecoacoustics Analysis Programs software. See https://github.com/QutEcoacoustics/audio-analysis information usage installation AP software. Note function relies software installed locally. function batch calculate summary spectral acoustic indices generate false-colour spectrograms folder audio files using Towsey.Acoustic configuration (yml) file AP software. can use output `wt_audio_scanner()` function, define local folder audio files directly.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_run_ap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get acoustic index values from audio — wt_run_ap","text":"","code":"wt_run_ap(   x = NULL,   fp_col = file_path,   audio_dir = NULL,   output_dir,   path_to_ap = \"C:\\\\AP\\\\AnalysisPrograms.exe\",   delete_media = FALSE )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_run_ap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get acoustic index values from audio — wt_run_ap","text":"x (optional) data frame tibble; must contain absolute audio file path file name. Use output `wt_audio_scanner()`. fp_col x supplied, column containing audio file paths. Defaults file_path. audio_dir (optional) Character; path directory storing audio files. output_dir Character; path directory want outputs stored. path_to_ap Character; file path AnalysisPrograms software package. Defaults \"C:\\AP\\AnalysisPrograms.exe\". delete_media Logical; TRUE, removes underlying sectioned wav files Towsey output. Leave TRUE save space runs.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_run_ap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get acoustic index values from audio — wt_run_ap","text":"Output return specific root directory","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_signal_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get signals from specific windows of audio — wt_signal_level","title":"Get signals from specific windows of audio — wt_signal_level","text":"Signal level uses amplitude frequency thresholds order detect signal.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_signal_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get signals from specific windows of audio — wt_signal_level","text":"","code":"wt_signal_level(   path,   fmin = 500,   fmax = NA,   threshold,   channel = \"left\",   aggregate = NULL )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_signal_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get signals from specific windows of audio — wt_signal_level","text":"path path wav file fmin frequency minimum fmax frequency maximum threshold desired threshold channel Choose \"left\" \"right\" channel aggregate Aggregate detections number seconds, desired","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_signal_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get signals from specific windows of audio — wt_signal_level","text":"list object containing following four elements: output (dataframe), aggregated (boolean), channel (character), threshold (numeric)","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_signal_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get signals from specific windows of audio — wt_signal_level","text":"","code":"if (FALSE) { # \\dontrun{ df <- wt_signal_level(path = \"\") } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_songscope_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Songscope output to tags — wt_songscope_tags","title":"Convert Songscope output to tags — wt_songscope_tags","text":"Convert Songscope output tags","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_songscope_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Songscope output to tags — wt_songscope_tags","text":"","code":"wt_songscope_tags(   input,   output = c(\"env\", \"csv\"),   my_output_file = NULL,   species_code,   vocalization_type,   score_filter,   method = c(\"USPM\", \"1SPT\"),   task_length )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_songscope_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Songscope output to tags — wt_songscope_tags","text":"input Character; path input csv output Character; Path output file stored my_output_file Character; Path output file species_code Character; Short-hand code species (see wt_get_species) vocalization_type Character; vocalization type either Song, Call, Non-Vocal, Night flight Feeding Buzz score_filter Numeric; Filter detections score method Character; Include options 1SPT, 1SPM None task_length Numeric; length task seconds","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_songscope_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Songscope output to tags — wt_songscope_tags","text":"csv formatted WildTrax tag template","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of analysis functions — wt_summarise_cam","title":"Set of analysis functions — wt_summarise_cam","text":"function takes independent detection data summarises location, specified time interval, species.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of analysis functions — wt_summarise_cam","text":"","code":"wt_summarise_cam(   detect_data,   raw_data,   time_interval = \"day\",   variable = \"detections\",   output_format = \"wide\",   species_col = species_common_name,   effort_data = NULL,   exclude_out_of_range = FALSE,   project_col = project_id,   station_col = location,   date_time_col = image_date_time,   start_col = start_date,   end_col = end_date,   detection_id_col = detection,   start_col_det = start_time )"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set of analysis functions — wt_summarise_cam","text":"detect_data Detection data generated wt_ind_det(). raw_data raw camera tag data, used infer effort (.e. date ranges operation) camera. Optionally, can supply effort_data directly instead. time_interval Character; Can either \"full\", \"month\", \"week\", \"day\" (default). variable Character; Can either \"detections\" (default), \"presence\", \"counts\", \"\" (want three). output_format Character; format dataframe returned . Can either \"wide\" (default) \"long\". species_col Defaults species_common_name. column referring species. Use switch common scientific names species, . effort_data Optionally supply effort data. exclude_out_of_range Logical; Remove days effort camera field--view obscured. project_col Defaults project_id. column referring project effort data. station_col Defaults location. column referring individual camera station/location effort data. date_time_col Defaults image_date_time. column referring image date-time stamp. start_col Defaults start_date. column indicating start date camera location end_col Defaults end_date. column indicating end date camera location detection_id_col Defaults detection. column indicating detection id start_col_det Defaults start_time. column indicating start time independent detections","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set of analysis functions — wt_summarise_cam","text":"dataframe summarising camera data location, time interval, species.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":"summarise-camera-data-by-location-time-interval-and-species-","dir":"Reference","previous_headings":"","what":"Summarise camera data by location, time interval, and species.","title":"Set of analysis functions — wt_summarise_cam","text":"NA","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_summarise_cam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set of analysis functions — wt_summarise_cam","text":"","code":"if (FALSE) { # \\dontrun{ summary <- wt_summarise_cam( x, y, time_interval = \"day\", variable = \"detections\", output_format = \"wide\" ) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_tidy_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter species from a report — wt_tidy_species","title":"Filter species from a report — wt_tidy_species","text":"function filters species provided WildTrax reports groups interest. groups available filtering mammal, bird, amphibian, abiotic, insect, unknown. Zero-filling functionality available ensure surveys retained dataset observations group interest available.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_tidy_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter species from a report — wt_tidy_species","text":"","code":"wt_tidy_species(data, remove = \"\", zerofill = TRUE)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_tidy_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter species from a report — wt_tidy_species","text":"data WildTrax main report tag report wt_download_report() function. remove Character; groups filter report (\"mammal\", \"bird\", \"amphibian\", \"abiotic\", \"insect\", \"human\", \"unknown\"). Defaults retaining bird group . zerofill Logical; indicates zerofilling completed. TRUE, unique surveys observations filtering added dataset \"NONE\" value species_code /species_common_name. FALSE, surveys observations retained groups returned. Default TRUE.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_tidy_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter species from a report — wt_tidy_species","text":"dataframe identical input observations specified groups removed.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_tidy_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter species from a report — wt_tidy_species","text":"","code":"if (FALSE) { # \\dontrun{ dat.tidy <- wt_tidy_species(dat, remove=c(\"mammal\", \"unknown\"), zerofill = T) } # }"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_wac_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant metadata from a wac file — wt_wac_info","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"Scrape relevant information wac (Wildlife Acoustics) file","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_wac_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"","code":"wt_wac_info(path)"},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_wac_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"path Character; wac file path","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/reference/wt_wac_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant metadata from a wac file — wt_wac_info","text":"list relevant information","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"major-changes-1-3-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildrtrax 1.3.1","text":"Upgraded authorization API requests httr2 Removed lubridate, curl intrval dependencies","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"minor-changes-1-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"wildrtrax 1.3.1","text":"Address camera functionalities #60, #62 Add GRTS grid cells Alaska contiguous United States wt_add_grts() (#64) Use .wt_col_types() dynamically adjust column reports help address (#55) Moved wt_calculate_prf() internal function","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"major-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildrtrax 1.3.0","text":"wt_dd_summary() querying data Data Discover. See APIs information wt_evaluate_classifier(), wt_get_threshold(), wt_additional_species() wrangling acoustic automated classification results. See Acoustic classifiers information. wt_add_grts() intersect locations GRTS IDs NABat wt_download_tags() now becomes wt_download_media() support broader media downloads batch WildTrax Deprecated wt_report()","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"minor-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"wildrtrax 1.3.0","text":"Switch curl::curl_download() media assets Removed dependencies pipeR, progressr, jsonlite, future, furrr, tools, magrittr, markdown, rmarkdown increase package stability reduces speed functions wt_audio_scanner(), wt_run_ap(). Moved vembedr suggests vignettes Switched wt_download_report() POST requests Lowercase package name","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"major-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildrtrax 1.2.0","text":"wt_chop() now recurses across input files Moving geospatial assets new repository lighten package size. Asset requests now made usage wt_qpad_offsets().","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"wildrtrax 1.2.0","text":"Improvements APIs acoustic convenience functions resolve issues PRs Improvements test suite, testing dependencies, code coverage Addition Camera data wrangling vignette additional tutorials","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"major-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildrtrax 1.1.0","text":"wildrtrax now honours new WildTrax report structures. Future changes incorporate standardized naming syncing functions. Replaced geospatial functionalities rgdal, rgeos maptools sf, sp terra packages. Added functionality suntools package. Users re-download package October 2023 -line former package retirement: https://geocompx.org/post/2023/rgdal-retirement/.","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"wildrtrax 1.1.0","text":"Tweaks Acoustic data wrangling (#16) Addition geospatial assets. Users warned package size now ~40 MB. Moved TMTT predictions csv .RDS file. Work flow repairs wt_get_species() wt_tidy_species() (#21) Replaced utils::read.csv() readr::read_csv() wt_download_report() (#20)","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"wildrtrax-101","dir":"Changelog","previous_headings":"","what":"wildrtrax 1.0.1","title":"wildrtrax 1.0.1","text":"Patching API errors wt_download_report() Adding additional articles Acoustic data wrangling","code":""},{"path":[]},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"wildrtrax 1.0.0","text":"Addition flac file type Addition extra_cols argument enable faster scanning argument set FALSE. also deals headerless file errors (#2) Enabled parallel file scanning; microbenchmarked base scanning 5.6x faster dual-core machine Moved progress bars progressr package Addition wt_glean_ap() function acoustic pre-processing work flow extract desired data wt_run_ap() output Addition linking functions order add desired media metadata WildTrax: wt_make_aru_tasks(), wt_kaleidoscope_tags() wt_songscope_tags() Addition convenience functions: wt_location_distances() wt_chop() Alignment wt_download_report() column headers released WildTrax Phase 8 resolve (#3, #4, #5) Addition additional acoustic functions prepare data analysis: wt_replace_tmtt(), wt_make_wide(), wt_format_occupancy(), wt_qpad_offsets() Addition wt_get_species() download WildTrax species table wt_tidy_species() filter various taxa Addition wt_download_tags() download images, spectrograms audio clips tags Experimental testing customizable, automated reports wt_report() Long-form documentation available full-cycle environmental work flows new articles usage acoustic camera data analysis functions","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"minor-improvements-and-bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"wildrtrax 1.0.0","text":"Moved wt_run_ap() furrr::future_map dopar loop lessen package dependencies Quiet console output wt_run_ap() Windows users Added NEWS.md file track changes package Renamed wt_ind_det wt_ind_detect()","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"deprecated-1-0-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"wildrtrax 1.0.0","text":"wt_prob_det()","code":""},{"path":"https://abbiodiversity.github.io/wildrtrax/news/index.html","id":"wildrtrax-010","dir":"Changelog","previous_headings":"","what":"wildrtrax 0.1.0","title":"wildrtrax 0.1.0","text":"wt_audio_scanner(), wt_run_ap(), wt_signal_level(), wt_prob_det() wt_ind_det, wt_summarise_cam() wt_auth(), wt_get_download_summary(), wt_download_report()","code":""}]
