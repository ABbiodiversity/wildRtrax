% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acoustic-pre-processing.R
\name{wt_make_aru_tasks}
\alias{wt_make_aru_tasks}
\title{Linking media to WildTrax}
\usage{
wt_make_aru_tasks(
  input,
  output = NULL,
  task_method = c("1SPM", "1SPT", "None"),
  task_length
)
}
\arguments{
\item{input}{Character; An input \code{wt_audio_scanner()} tibble. If not a \code{wt_audio_scanner()} tibble, the data must contain at minimum the location, recording_date_time and file_path as columns.}

\item{output}{Character; Path where the output task csv file will be stored}

\item{task_method}{Character; Method type of the task. Options are 1SPM, 1SPT and None. See Methods(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) in WildTrax for more details.}

\item{task_length}{Numeric; Task length in seconds. Must be between 1 - 1800 and can be up to two decimal places.}
}
\value{
A csv formatted as a WildTrax task template

It's important that if the media hasn't been uploaded to WildTrax, that you do that first before trying to generate tasks in a project.
In parallel, you can select the files you want and upload and generate tasks in a project.
}
\description{
\code{wt_make_aru_tasks()} uses a \code{wt_audio_scanner()} input tibble to create a task template to upload to a WildTrax project.
}
\details{
Prepare media and data for upload to WildTrax

The following suite of functions will help you wrangle media and data together
in order to upload them to WildTrax. You can make tasks(https://www.wildtrax.ca/home/resources/guide/projects/aru-projects.html)
and tags(https://www.wildtrax.ca/home/resources/guide/acoustic-data/acoustic-tagging-methods.html) using the results from a
\code{wt_audio_scanner()} tibble or the hits from one of two Wildlife Acoustics programs Songscope() and Kaleidoscpe().

Creating tasks from media
}
\section{\code{wt_make_aru_tasks}}{
NA
}

\examples{
\dontrun{
wt_make_tasks(input = my_audio_tibble, output = tasks.csv, task_method = "1SPT", task_length = 180)
}

}
